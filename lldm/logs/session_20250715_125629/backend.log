=== LLaDA 后端服务日志 ===
启动时间: Tue Jul 15 12:56:29 CST 2025
日志会话: 20250715_125629
Python版本: Python 3.12.3
工作目录: /root/LLaDA-main/lldm
设备检测: CUDA可用: True
==========================

2025-07-15 12:56:35 - INFO - [server.py:102] - 初始化设备: cuda
2025-07-15 12:56:35 - INFO - [server.py:109] - GPU总内存: 23.5GB
2025-07-15 12:56:35 - INFO - [server.py:112] - 开始加载tokenizer...
2025-07-15 12:56:36 - INFO - [server.py:114] - Tokenizer加载成功
2025-07-15 12:56:36 - INFO - [server.py:116] - 开始加载模型...
2025-07-15 12:56:37 - INFO - [modeling.py:991] - We will use 90% of the memory on device 0 for storing the model, and 10% for the buffer to avoid OOM. You can set `max_memory` in to a higher value to use more memory (at your own risk).
2025-07-15 12:56:37 - WARNING - [modeling.py:1114] - The model weights are not tied. Please use the `tie_weights` method before using the `infer_auto_device` function.
2025-07-15 12:56:41 - INFO - [server.py:134] - 模型加载成功，设备: cuda
2025-07-15 12:56:41 - INFO - [server.py:137] - GPU已分配内存: 14.9GB
2025-07-15 12:56:41 - INFO - [server.py:512] - ==================================================
2025-07-15 12:56:41 - INFO - [server.py:513] - 🚀 LLaDA后端服务启动
2025-07-15 12:56:41 - INFO - [server.py:514] - 启动时间: 2025-07-15T12:56:41.447224
2025-07-15 12:56:41 - INFO - [server.py:515] - Python版本: 3.12.3 | packaged by Anaconda, Inc. | (main, May  6 2024, 19:46:43) [GCC 11.2.0]
2025-07-15 12:56:41 - INFO - [server.py:516] - 工作目录: /root/LLaDA-main/lldm
2025-07-15 12:56:41 - INFO - [server.py:517] - 设备: cuda
2025-07-15 12:56:41 - INFO - [server.py:519] - GPU内存: 23.5GB
2025-07-15 12:56:41 - INFO - [server.py:520] - ==================================================
2025-07-15 12:56:41 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:9000
 * Running on http://172.17.0.11:9000
2025-07-15 12:56:41 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-07-15 12:56:41 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "curl/7.81.0",
  "timestamp": "2025-07-15T12:56:41.518647"
}
2025-07-15 12:56:41 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:56:41.519735",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:56:41 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:56:41] "GET /health HTTP/1.1" 200 -
2025-07-15 12:56:50 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "python-requests/2.31.0",
  "timestamp": "2025-07-15T12:56:50.524261"
}
2025-07-15 12:56:50 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:56:50.525104",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:56:50 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:56:50] "GET /health HTTP/1.1" 200 -
2025-07-15 12:56:51 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "python-requests/2.31.0",
  "timestamp": "2025-07-15T12:56:51.532662",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "你好"
      }
    ],
    "settings": {
      "gen_length": 16,
      "steps": 8,
      "temperature": 0.0,
      "cfg_scale": 0.0
    }
  }
}
2025-07-15 12:56:51 - INFO - [server.py:448] - [req_1752555411533] 收到生成请求
2025-07-15 12:56:51 - INFO - [server.py:456] - [req_1752555411533] 请求数据详情:
2025-07-15 12:56:51 - INFO - [server.py:457] - [req_1752555411533] - 消息数量: 1
2025-07-15 12:56:51 - INFO - [server.py:458] - [req_1752555411533] - 设置参数: {
  "gen_length": 16,
  "steps": 8,
  "temperature": 0.0,
  "cfg_scale": 0.0
}
2025-07-15 12:56:51 - DEBUG - [server.py:459] - [req_1752555411533] - 完整消息列表: [
  {
    "role": "user",
    "content": "你好"
  }
]
2025-07-15 12:56:51 - INFO - [server.py:470] - [req_1752555411533] 开始生成响应...
2025-07-15 12:56:51 - INFO - [server.py:206] - ============================================================
2025-07-15 12:56:51 - INFO - [server.py:207] - 开始生成响应
2025-07-15 12:56:51 - INFO - [server.py:208] - 输入消息数量: 1
2025-07-15 12:56:51 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=2
2025-07-15 12:56:51 - DEBUG - [server.py:211] - 消息 1 内容: 你好
2025-07-15 12:56:51 - INFO - [server.py:213] - 设置参数: {
  "gen_length": 16,
  "steps": 8,
  "temperature": 0.0,
  "cfg_scale": 0.0
}
2025-07-15 12:56:51 - INFO - [server.py:225] - 解析后的约束: {}
2025-07-15 12:56:51 - INFO - [server.py:230] - 生成前GPU内存使用: 14.93GB
2025-07-15 12:56:51 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 12:56:51 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 12:56:51 - INFO - [server.py:239] - 输入token数量: 14
2025-07-15 12:56:51 - INFO - [server.py:246] - 序列总长度: 30, prompt长度: 14, 生成长度: 16
2025-07-15 12:56:51 - INFO - [server.py:255] - 应用约束数量: 0
2025-07-15 12:56:51 - INFO - [server.py:275] - 块处理配置: 块长度=16, 块数量=1, 每块步数=8
2025-07-15 12:56:51 - INFO - [server.py:279] - 处理第 1/1 块...
2025-07-15 12:56:51 - DEBUG - [server.py:294] - 块 1, 步骤 1/8
2025-07-15 12:56:51 - DEBUG - [server.py:294] - 块 1, 步骤 2/8
2025-07-15 12:56:51 - DEBUG - [server.py:294] - 块 1, 步骤 3/8
2025-07-15 12:56:52 - DEBUG - [server.py:294] - 块 1, 步骤 4/8
2025-07-15 12:56:52 - DEBUG - [server.py:294] - 块 1, 步骤 5/8
2025-07-15 12:56:52 - DEBUG - [server.py:294] - 块 1, 步骤 6/8
2025-07-15 12:56:52 - DEBUG - [server.py:294] - 块 1, 步骤 7/8
2025-07-15 12:56:52 - DEBUG - [server.py:294] - 块 1, 步骤 8/8
2025-07-15 12:56:52 - INFO - [server.py:400] - 生成后GPU内存使用: 15.36GB
2025-07-15 12:56:52 - INFO - [server.py:402] - 生成完成!
2025-07-15 12:56:52 - INFO - [server.py:403] - 响应文本长度: 17
2025-07-15 12:56:52 - INFO - [server.py:404] - 可视化步骤数: 9
2025-07-15 12:56:52 - INFO - [server.py:405] - 生成耗时: 0.75秒
2025-07-15 12:56:52 - DEBUG - [server.py:406] - 生成的响应文本: 你好！有什么我可以可以帮助你的吗？
2025-07-15 12:56:52 - INFO - [server.py:407] - ============================================================
2025-07-15 12:56:52 - INFO - [server.py:479] - [req_1752555411533] 生成成功!
2025-07-15 12:56:52 - INFO - [server.py:480] - [req_1752555411533] 响应长度: 17
2025-07-15 12:56:52 - INFO - [server.py:481] - [req_1752555411533] 可视化步骤: 9
2025-07-15 12:56:52 - INFO - [server.py:482] - [req_1752555411533] 总耗时: 0.75秒
2025-07-15 12:56:52 - DEBUG - [server.py:483] - [req_1752555411533] 响应文本: 你好！有什么我可以可以帮助你的吗？
2025-07-15 12:56:52 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 3111,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:56:52.285093"
}
2025-07-15 12:56:52 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:56:52] "POST /generate HTTP/1.1" 200 -
2025-07-15 12:56:53 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "python-requests/2.31.0",
  "timestamp": "2025-07-15T12:56:53.291972",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "今天天气怎么样？"
      }
    ],
    "settings": {
      "gen_length": 12,
      "steps": 6,
      "temperature": 0.0,
      "constraints": "0:今天, 2:天气, 4:很好"
    }
  }
}
2025-07-15 12:56:53 - INFO - [server.py:448] - [req_1752555413292] 收到生成请求
2025-07-15 12:56:53 - INFO - [server.py:456] - [req_1752555413292] 请求数据详情:
2025-07-15 12:56:53 - INFO - [server.py:457] - [req_1752555413292] - 消息数量: 1
2025-07-15 12:56:53 - INFO - [server.py:458] - [req_1752555413292] - 设置参数: {
  "gen_length": 12,
  "steps": 6,
  "temperature": 0.0,
  "constraints": "0:今天, 2:天气, 4:很好"
}
2025-07-15 12:56:53 - DEBUG - [server.py:459] - [req_1752555413292] - 完整消息列表: [
  {
    "role": "user",
    "content": "今天天气怎么样？"
  }
]
2025-07-15 12:56:53 - INFO - [server.py:470] - [req_1752555413292] 开始生成响应...
2025-07-15 12:56:53 - INFO - [server.py:206] - ============================================================
2025-07-15 12:56:53 - INFO - [server.py:207] - 开始生成响应
2025-07-15 12:56:53 - INFO - [server.py:208] - 输入消息数量: 1
2025-07-15 12:56:53 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=8
2025-07-15 12:56:53 - DEBUG - [server.py:211] - 消息 1 内容: 今天天气怎么样？
2025-07-15 12:56:53 - INFO - [server.py:213] - 设置参数: {
  "gen_length": 12,
  "steps": 6,
  "temperature": 0.0,
  "constraints": "0:今天, 2:天气, 4:很好"
}
2025-07-15 12:56:53 - INFO - [server.py:225] - 解析后的约束: {0: '今天', 2: '天气', 4: '很好'}
2025-07-15 12:56:53 - INFO - [server.py:230] - 生成前GPU内存使用: 14.94GB
2025-07-15 12:56:53 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 12:56:53 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

今天天气怎么样？<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 12:56:53 - INFO - [server.py:239] - 输入token数量: 17
2025-07-15 12:56:53 - INFO - [server.py:246] - 序列总长度: 29, prompt长度: 17, 生成长度: 12
2025-07-15 12:56:53 - INFO - [server.py:255] - 应用约束数量: 5
2025-07-15 12:56:53 - DEBUG - [server.py:260] - 约束位置 0 (绝对位置 17): token_id=34808
2025-07-15 12:56:53 - DEBUG - [server.py:260] - 约束位置 2 (绝对位置 19): token_id=220
2025-07-15 12:56:53 - DEBUG - [server.py:260] - 约束位置 3 (绝对位置 20): token_id=13092
2025-07-15 12:56:53 - DEBUG - [server.py:260] - 约束位置 4 (绝对位置 21): token_id=220
2025-07-15 12:56:53 - DEBUG - [server.py:260] - 约束位置 5 (绝对位置 22): token_id=9052
2025-07-15 12:56:53 - INFO - [server.py:275] - 块处理配置: 块长度=12, 块数量=1, 每块步数=6
2025-07-15 12:56:53 - INFO - [server.py:279] - 处理第 1/1 块...
2025-07-15 12:56:53 - DEBUG - [server.py:294] - 块 1, 步骤 1/6
2025-07-15 12:56:53 - DEBUG - [server.py:294] - 块 1, 步骤 2/6
2025-07-15 12:56:53 - DEBUG - [server.py:294] - 块 1, 步骤 3/6
2025-07-15 12:56:53 - DEBUG - [server.py:294] - 块 1, 步骤 4/6
2025-07-15 12:56:53 - DEBUG - [server.py:294] - 块 1, 步骤 5/6
2025-07-15 12:56:53 - DEBUG - [server.py:294] - 块 1, 步骤 6/6
2025-07-15 12:56:53 - INFO - [server.py:400] - 生成后GPU内存使用: 15.35GB
2025-07-15 12:56:53 - INFO - [server.py:402] - 生成完成!
2025-07-15 12:56:53 - INFO - [server.py:403] - 响应文本长度: 22
2025-07-15 12:56:53 - INFO - [server.py:404] - 可视化步骤数: 7
2025-07-15 12:56:53 - INFO - [server.py:405] - 生成耗时: 0.30秒
2025-07-15 12:56:53 - DEBUG - [server.py:406] - 生成的响应文本:  今天 的 天气 很好，阳光明媚，气温适宜。
2025-07-15 12:56:53 - INFO - [server.py:407] - ============================================================
2025-07-15 12:56:53 - INFO - [server.py:479] - [req_1752555413292] 生成成功!
2025-07-15 12:56:53 - INFO - [server.py:480] - [req_1752555413292] 响应长度: 22
2025-07-15 12:56:53 - INFO - [server.py:481] - [req_1752555413292] 可视化步骤: 7
2025-07-15 12:56:53 - INFO - [server.py:482] - [req_1752555413292] 总耗时: 0.31秒
2025-07-15 12:56:53 - DEBUG - [server.py:483] - [req_1752555413292] 响应文本:  今天 的 天气 很好，阳光明媚，气温适宜。
2025-07-15 12:56:53 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 2096,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:56:53.598213"
}
2025-07-15 12:56:53 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:56:53] "POST /generate HTTP/1.1" 200 -
2025-07-15 12:56:55 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:56:55.293159"
}
2025-07-15 12:56:55 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:56:55.293952",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:56:55 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:56:55] "GET /health HTTP/1.1" 200 -
2025-07-15 12:56:55 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:56:55.698668"
}
2025-07-15 12:56:55 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:56:55.699460",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:56:55 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:56:55] "GET /health HTTP/1.1" 200 -
2025-07-15 12:56:58 - INFO - [server.py:78] - 收到请求: {
  "method": "OPTIONS",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:56:58.669378"
}
2025-07-15 12:56:58 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": null,
  "content_type": "text/html; charset=utf-8",
  "timestamp": "2025-07-15T12:56:58.670329"
}
2025-07-15 12:56:58 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:56:58] "OPTIONS /generate HTTP/1.1" 200 -
2025-07-15 12:56:58 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:56:58.992664",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "你好"
      }
    ],
    "settings": {
      "temperature": 0,
      "top_p": 0.95,
      "gen_length": 50,
      "num_beams": 4,
      "steps": 32,
      "cfg_scale": 1,
      "constraints": ""
    }
  }
}
2025-07-15 12:56:58 - INFO - [server.py:448] - [req_1752555418993] 收到生成请求
2025-07-15 12:56:58 - INFO - [server.py:456] - [req_1752555418993] 请求数据详情:
2025-07-15 12:56:58 - INFO - [server.py:457] - [req_1752555418993] - 消息数量: 1
2025-07-15 12:56:58 - INFO - [server.py:458] - [req_1752555418993] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 12:56:58 - DEBUG - [server.py:459] - [req_1752555418993] - 完整消息列表: [
  {
    "role": "user",
    "content": "你好"
  }
]
2025-07-15 12:56:58 - INFO - [server.py:470] - [req_1752555418993] 开始生成响应...
2025-07-15 12:56:58 - INFO - [server.py:206] - ============================================================
2025-07-15 12:56:58 - INFO - [server.py:207] - 开始生成响应
2025-07-15 12:56:58 - INFO - [server.py:208] - 输入消息数量: 1
2025-07-15 12:56:58 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=2
2025-07-15 12:56:58 - DEBUG - [server.py:211] - 消息 1 内容: 你好
2025-07-15 12:56:58 - INFO - [server.py:213] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 12:56:58 - INFO - [server.py:225] - 解析后的约束: {}
2025-07-15 12:56:58 - INFO - [server.py:230] - 生成前GPU内存使用: 14.94GB
2025-07-15 12:56:58 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 12:56:58 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 12:56:58 - INFO - [server.py:239] - 输入token数量: 14
2025-07-15 12:56:58 - INFO - [server.py:246] - 序列总长度: 64, prompt长度: 14, 生成长度: 50
2025-07-15 12:56:58 - INFO - [server.py:255] - 应用约束数量: 0
2025-07-15 12:56:58 - INFO - [server.py:275] - 块处理配置: 块长度=32, 块数量=2, 每块步数=16
2025-07-15 12:56:58 - INFO - [server.py:279] - 处理第 1/2 块...
2025-07-15 12:56:58 - DEBUG - [server.py:294] - 块 1, 步骤 1/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 2/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 3/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 4/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 5/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 6/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 7/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 8/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 9/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 10/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 11/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 12/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 13/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 14/16
2025-07-15 12:56:59 - DEBUG - [server.py:294] - 块 1, 步骤 15/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 1, 步骤 16/16
2025-07-15 12:57:00 - INFO - [server.py:279] - 处理第 2/2 块...
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 1/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 2/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 3/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 4/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 5/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 6/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 7/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 8/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 9/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 10/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 11/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 12/16
2025-07-15 12:57:00 - DEBUG - [server.py:294] - 块 2, 步骤 13/16
2025-07-15 12:57:01 - DEBUG - [server.py:294] - 块 2, 步骤 14/16
2025-07-15 12:57:01 - DEBUG - [server.py:294] - 块 2, 步骤 15/16
2025-07-15 12:57:01 - DEBUG - [server.py:294] - 块 2, 步骤 16/16
2025-07-15 12:57:01 - INFO - [server.py:400] - 生成后GPU内存使用: 16.65GB
2025-07-15 12:57:01 - INFO - [server.py:402] - 生成完成!
2025-07-15 12:57:01 - INFO - [server.py:403] - 响应文本长度: 15
2025-07-15 12:57:01 - INFO - [server.py:404] - 可视化步骤数: 33
2025-07-15 12:57:01 - INFO - [server.py:405] - 生成耗时: 2.22秒
2025-07-15 12:57:01 - DEBUG - [server.py:406] - 生成的响应文本: 你好！有什么我可以帮助你的吗？
2025-07-15 12:57:01 - INFO - [server.py:407] - ============================================================
2025-07-15 12:57:01 - INFO - [server.py:479] - [req_1752555418993] 生成成功!
2025-07-15 12:57:01 - INFO - [server.py:480] - [req_1752555418993] 响应长度: 15
2025-07-15 12:57:01 - INFO - [server.py:481] - [req_1752555418993] 可视化步骤: 33
2025-07-15 12:57:01 - INFO - [server.py:482] - [req_1752555418993] 总耗时: 2.22秒
2025-07-15 12:57:01 - DEBUG - [server.py:483] - [req_1752555418993] 响应文本: 你好！有什么我可以帮助你的吗？
2025-07-15 12:57:01 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 31077,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:57:01.218165"
}
2025-07-15 12:57:01 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:57:01] "POST /generate HTTP/1.1" 200 -
2025-07-15 12:57:18 - INFO - [server.py:78] - 收到请求: {
  "method": "OPTIONS",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:57:18.359744"
}
2025-07-15 12:57:18 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": null,
  "content_type": "text/html; charset=utf-8",
  "timestamp": "2025-07-15T12:57:18.360841"
}
2025-07-15 12:57:18 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:57:18] "OPTIONS /generate HTTP/1.1" 200 -
2025-07-15 12:57:18 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:57:18.671119",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "你好"
      },
      {
        "role": "assistant",
        "content": "你好！有什么我可以帮助你的吗？"
      },
      {
        "role": "user",
        "content": "我不好"
      }
    ],
    "settings": {
      "temperature": 0,
      "top_p": 0.95,
      "gen_length": 50,
      "num_beams": 4,
      "steps": 32,
      "cfg_scale": 1,
      "constraints": ""
    }
  }
}
2025-07-15 12:57:18 - INFO - [server.py:448] - [req_1752555438672] 收到生成请求
2025-07-15 12:57:18 - INFO - [server.py:456] - [req_1752555438672] 请求数据详情:
2025-07-15 12:57:18 - INFO - [server.py:457] - [req_1752555438672] - 消息数量: 3
2025-07-15 12:57:18 - INFO - [server.py:458] - [req_1752555438672] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 12:57:18 - DEBUG - [server.py:459] - [req_1752555438672] - 完整消息列表: [
  {
    "role": "user",
    "content": "你好"
  },
  {
    "role": "assistant",
    "content": "你好！有什么我可以帮助你的吗？"
  },
  {
    "role": "user",
    "content": "我不好"
  }
]
2025-07-15 12:57:18 - INFO - [server.py:470] - [req_1752555438672] 开始生成响应...
2025-07-15 12:57:18 - INFO - [server.py:206] - ============================================================
2025-07-15 12:57:18 - INFO - [server.py:207] - 开始生成响应
2025-07-15 12:57:18 - INFO - [server.py:208] - 输入消息数量: 3
2025-07-15 12:57:18 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=2
2025-07-15 12:57:18 - DEBUG - [server.py:211] - 消息 1 内容: 你好
2025-07-15 12:57:18 - INFO - [server.py:210] - 消息 2: 角色=assistant, 内容长度=15
2025-07-15 12:57:18 - DEBUG - [server.py:211] - 消息 2 内容: 你好！有什么我可以帮助你的吗？
2025-07-15 12:57:18 - INFO - [server.py:210] - 消息 3: 角色=user, 内容长度=3
2025-07-15 12:57:18 - DEBUG - [server.py:211] - 消息 3 内容: 我不好
2025-07-15 12:57:18 - INFO - [server.py:213] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 12:57:18 - INFO - [server.py:225] - 解析后的约束: {}
2025-07-15 12:57:18 - INFO - [server.py:230] - 生成前GPU内存使用: 14.94GB
2025-07-15 12:57:18 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 12:57:18 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>

你好！有什么我可以帮助你的吗？<|eot_id|><|start_header_id|>user<|end_header_id|>

我不好<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 12:57:18 - INFO - [server.py:239] - 输入token数量: 37
2025-07-15 12:57:18 - INFO - [server.py:246] - 序列总长度: 87, prompt长度: 37, 生成长度: 50
2025-07-15 12:57:18 - INFO - [server.py:255] - 应用约束数量: 0
2025-07-15 12:57:18 - INFO - [server.py:275] - 块处理配置: 块长度=32, 块数量=2, 每块步数=16
2025-07-15 12:57:18 - INFO - [server.py:279] - 处理第 1/2 块...
2025-07-15 12:57:18 - DEBUG - [server.py:294] - 块 1, 步骤 1/16
2025-07-15 12:57:18 - DEBUG - [server.py:294] - 块 1, 步骤 2/16
2025-07-15 12:57:18 - DEBUG - [server.py:294] - 块 1, 步骤 3/16
2025-07-15 12:57:18 - DEBUG - [server.py:294] - 块 1, 步骤 4/16
2025-07-15 12:57:18 - DEBUG - [server.py:294] - 块 1, 步骤 5/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 6/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 7/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 8/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 9/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 10/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 11/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 12/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 13/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 14/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 15/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 1, 步骤 16/16
2025-07-15 12:57:19 - INFO - [server.py:279] - 处理第 2/2 块...
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 2, 步骤 1/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 2, 步骤 2/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 2, 步骤 3/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 2, 步骤 4/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 2, 步骤 5/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 2, 步骤 6/16
2025-07-15 12:57:19 - DEBUG - [server.py:294] - 块 2, 步骤 7/16
2025-07-15 12:57:20 - DEBUG - [server.py:294] - 块 2, 步骤 8/16
2025-07-15 12:57:20 - DEBUG - [server.py:294] - 块 2, 步骤 9/16
2025-07-15 12:57:20 - DEBUG - [server.py:294] - 块 2, 步骤 10/16
2025-07-15 12:57:20 - DEBUG - [server.py:294] - 块 2, 步骤 11/16
2025-07-15 12:57:20 - DEBUG - [server.py:294] - 块 2, 步骤 12/16
2025-07-15 12:57:20 - DEBUG - [server.py:294] - 块 2, 步骤 13/16
2025-07-15 12:57:20 - DEBUG - [server.py:294] - 块 2, 步骤 14/16
2025-07-15 12:57:20 - DEBUG - [server.py:294] - 块 2, 步骤 15/16
2025-07-15 12:57:20 - DEBUG - [server.py:294] - 块 2, 步骤 16/16
2025-07-15 12:57:20 - INFO - [server.py:400] - 生成后GPU内存使用: 17.31GB
2025-07-15 12:57:20 - INFO - [server.py:402] - 生成完成!
2025-07-15 12:57:20 - INFO - [server.py:403] - 响应文本长度: 24
2025-07-15 12:57:20 - INFO - [server.py:404] - 可视化步骤数: 33
2025-07-15 12:57:20 - INFO - [server.py:405] - 生成耗时: 1.78秒
2025-07-15 12:57:20 - DEBUG - [server.py:406] - 生成的响应文本: 我很抱歉听到你不好。能否告诉我更多关于的情况吗？
2025-07-15 12:57:20 - INFO - [server.py:407] - ============================================================
2025-07-15 12:57:20 - INFO - [server.py:479] - [req_1752555438672] 生成成功!
2025-07-15 12:57:20 - INFO - [server.py:480] - [req_1752555438672] 响应长度: 24
2025-07-15 12:57:20 - INFO - [server.py:481] - [req_1752555438672] 可视化步骤: 33
2025-07-15 12:57:20 - INFO - [server.py:482] - [req_1752555438672] 总耗时: 1.78秒
2025-07-15 12:57:20 - DEBUG - [server.py:483] - [req_1752555438672] 响应文本: 我很抱歉听到你不好。能否告诉我更多关于的情况吗？
2025-07-15 12:57:20 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 32739,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:57:20.457621"
}
2025-07-15 12:57:20 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:57:20] "POST /generate HTTP/1.1" 200 -
2025-07-15 12:57:24 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:57:24.335130"
}
2025-07-15 12:57:24 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:57:24.336000",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:57:24 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:57:24] "GET /health HTTP/1.1" 200 -
2025-07-15 12:57:47 - INFO - [server.py:78] - 收到请求: {
  "method": "OPTIONS",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:57:47.668084"
}
2025-07-15 12:57:47 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": null,
  "content_type": "text/html; charset=utf-8",
  "timestamp": "2025-07-15T12:57:47.668995"
}
2025-07-15 12:57:47 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:57:47] "OPTIONS /generate HTTP/1.1" 200 -
2025-07-15 12:57:47 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:57:47.711557",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "你好"
      },
      {
        "role": "assistant",
        "content": "你好！有什么我可以帮助你的吗？"
      },
      {
        "role": "user",
        "content": "我不好"
      },
      {
        "role": "assistant",
        "content": "我很抱歉听到你不好。能否告诉我更多关于的情况吗？"
      },
      {
        "role": "user",
        "content": "陈宏泽是谁"
      }
    ],
    "settings": {
      "temperature": 0,
      "top_p": 0.95,
      "gen_length": 50,
      "num_beams": 4,
      "steps": 32,
      "cfg_scale": 1,
      "constraints": ""
    }
  }
}
2025-07-15 12:57:47 - INFO - [server.py:448] - [req_1752555467712] 收到生成请求
2025-07-15 12:57:47 - INFO - [server.py:456] - [req_1752555467712] 请求数据详情:
2025-07-15 12:57:47 - INFO - [server.py:457] - [req_1752555467712] - 消息数量: 5
2025-07-15 12:57:47 - INFO - [server.py:458] - [req_1752555467712] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 12:57:47 - DEBUG - [server.py:459] - [req_1752555467712] - 完整消息列表: [
  {
    "role": "user",
    "content": "你好"
  },
  {
    "role": "assistant",
    "content": "你好！有什么我可以帮助你的吗？"
  },
  {
    "role": "user",
    "content": "我不好"
  },
  {
    "role": "assistant",
    "content": "我很抱歉听到你不好。能否告诉我更多关于的情况吗？"
  },
  {
    "role": "user",
    "content": "陈宏泽是谁"
  }
]
2025-07-15 12:57:47 - INFO - [server.py:470] - [req_1752555467712] 开始生成响应...
2025-07-15 12:57:47 - INFO - [server.py:206] - ============================================================
2025-07-15 12:57:47 - INFO - [server.py:207] - 开始生成响应
2025-07-15 12:57:47 - INFO - [server.py:208] - 输入消息数量: 5
2025-07-15 12:57:47 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=2
2025-07-15 12:57:47 - DEBUG - [server.py:211] - 消息 1 内容: 你好
2025-07-15 12:57:47 - INFO - [server.py:210] - 消息 2: 角色=assistant, 内容长度=15
2025-07-15 12:57:47 - DEBUG - [server.py:211] - 消息 2 内容: 你好！有什么我可以帮助你的吗？
2025-07-15 12:57:47 - INFO - [server.py:210] - 消息 3: 角色=user, 内容长度=3
2025-07-15 12:57:47 - DEBUG - [server.py:211] - 消息 3 内容: 我不好
2025-07-15 12:57:47 - INFO - [server.py:210] - 消息 4: 角色=assistant, 内容长度=24
2025-07-15 12:57:47 - DEBUG - [server.py:211] - 消息 4 内容: 我很抱歉听到你不好。能否告诉我更多关于的情况吗？
2025-07-15 12:57:47 - INFO - [server.py:210] - 消息 5: 角色=user, 内容长度=5
2025-07-15 12:57:47 - DEBUG - [server.py:211] - 消息 5 内容: 陈宏泽是谁
2025-07-15 12:57:47 - INFO - [server.py:213] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 12:57:47 - INFO - [server.py:225] - 解析后的约束: {}
2025-07-15 12:57:47 - INFO - [server.py:230] - 生成前GPU内存使用: 14.94GB
2025-07-15 12:57:47 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 12:57:47 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>

你好！有什么我可以帮助你的吗？<|eot_id|><|start_header_id|>user<|end_header_id|>

我不好<|eot_id|><|start_header_id|>assistant<|end_header_id|>

我很抱歉听到你不好。能否告诉我更多关于的情况吗？<|eot_id|><|start_header_id|>user<|end_header_id|>

陈宏泽是谁<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 12:57:47 - INFO - [server.py:239] - 输入token数量: 67
2025-07-15 12:57:47 - INFO - [server.py:246] - 序列总长度: 117, prompt长度: 67, 生成长度: 50
2025-07-15 12:57:47 - INFO - [server.py:255] - 应用约束数量: 0
2025-07-15 12:57:47 - INFO - [server.py:275] - 块处理配置: 块长度=32, 块数量=2, 每块步数=16
2025-07-15 12:57:47 - INFO - [server.py:279] - 处理第 1/2 块...
2025-07-15 12:57:47 - DEBUG - [server.py:294] - 块 1, 步骤 1/16
2025-07-15 12:57:47 - DEBUG - [server.py:294] - 块 1, 步骤 2/16
2025-07-15 12:57:47 - DEBUG - [server.py:294] - 块 1, 步骤 3/16
2025-07-15 12:57:47 - DEBUG - [server.py:294] - 块 1, 步骤 4/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 5/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 6/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 7/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 8/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 9/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 10/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 11/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 12/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 13/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 14/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 15/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 1, 步骤 16/16
2025-07-15 12:57:48 - INFO - [server.py:279] - 处理第 2/2 块...
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 2, 步骤 1/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 2, 步骤 2/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 2, 步骤 3/16
2025-07-15 12:57:48 - DEBUG - [server.py:294] - 块 2, 步骤 4/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 5/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 6/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 7/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 8/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 9/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 10/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 11/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 12/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 13/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 14/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 15/16
2025-07-15 12:57:49 - DEBUG - [server.py:294] - 块 2, 步骤 16/16
2025-07-15 12:57:49 - INFO - [server.py:400] - 生成后GPU内存使用: 18.03GB
2025-07-15 12:57:49 - INFO - [server.py:402] - 生成完成!
2025-07-15 12:57:49 - INFO - [server.py:403] - 响应文本长度: 102
2025-07-15 12:57:49 - INFO - [server.py:404] - 可视化步骤数: 33
2025-07-15 12:57:49 - INFO - [server.py:405] - 生成耗时: 2.05秒
2025-07-15 12:57:49 - DEBUG - [server.py:406] - 生成的响应文本: 陈宏泽是宏远集团的创始人，是中国，是中国的一位知名企业家。他。他是一位非常有才华和眼光的企业家，曾多次获得各种商业奖项和荣誉。宏远集团是一家多元化的跨国公司，涉及房地产、能源、制造业、电子商务等多个领域。
2025-07-15 12:57:49 - INFO - [server.py:407] - ============================================================
2025-07-15 12:57:49 - INFO - [server.py:479] - [req_1752555467712] 生成成功!
2025-07-15 12:57:49 - INFO - [server.py:480] - [req_1752555467712] 响应长度: 102
2025-07-15 12:57:49 - INFO - [server.py:481] - [req_1752555467712] 可视化步骤: 33
2025-07-15 12:57:49 - INFO - [server.py:482] - [req_1752555467712] 总耗时: 2.06秒
2025-07-15 12:57:49 - DEBUG - [server.py:483] - [req_1752555467712] 响应文本: 陈宏泽是宏远集团的创始人，是中国，是中国的一位知名企业家。他。他是一位非常有才华和眼光的企业家，曾多次获得各种商业奖项和荣誉。宏远集团是一家多元化的跨国公司，涉及房地产、能源、制造业、电子商务等多个领域。
2025-07-15 12:57:49 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 40989,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:57:49.772584"
}
2025-07-15 12:57:49 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:57:49] "POST /generate HTTP/1.1" 200 -
2025-07-15 12:57:54 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:57:54.803684"
}
2025-07-15 12:57:54 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:57:54.804469",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:57:54 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:57:54] "GET /health HTTP/1.1" 200 -
2025-07-15 12:58:24 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:58:24.397310"
}
2025-07-15 12:58:24 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:58:24.398384",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:58:24 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:58:24] "GET /health HTTP/1.1" 200 -
2025-07-15 12:58:55 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:58:55.054507"
}
2025-07-15 12:58:55 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:58:55.055314",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:58:55 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:58:55] "GET /health HTTP/1.1" 200 -
2025-07-15 12:59:31 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:59:31.189595"
}
2025-07-15 12:59:31 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:59:31.190410",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:59:31 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:59:31] "GET /health HTTP/1.1" 200 -
2025-07-15 12:59:54 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T12:59:54.836718"
}
2025-07-15 12:59:54 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T12:59:54.837525",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 12:59:54 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 12:59:54] "GET /health HTTP/1.1" 200 -
2025-07-15 13:00:24 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:00:24.337131"
}
2025-07-15 13:00:24 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:00:24.337971",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:00:24 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:00:24] "GET /health HTTP/1.1" 200 -
2025-07-15 13:01:30 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:01:30.940431"
}
2025-07-15 13:01:30 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:01:30.941233",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:01:30 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:01:30] "GET /health HTTP/1.1" 200 -
