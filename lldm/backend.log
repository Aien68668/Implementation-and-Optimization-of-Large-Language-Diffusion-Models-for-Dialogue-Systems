=== LLaDA 后端服务日志 ===
启动时间: Tue Jul 15 13:02:11 CST 2025
日志会话: 20250715_130211
Python版本: Python 3.12.3
工作目录: /root/LLaDA-main/lldm
设备检测: CUDA可用: True
==========================

2025-07-15 13:02:18 - INFO - [server.py:102] - 初始化设备: cuda
2025-07-15 13:02:18 - INFO - [server.py:109] - GPU总内存: 23.5GB
2025-07-15 13:02:18 - INFO - [server.py:112] - 开始加载tokenizer...
2025-07-15 13:02:18 - INFO - [server.py:114] - Tokenizer加载成功
2025-07-15 13:02:18 - INFO - [server.py:116] - 开始加载模型...
2025-07-15 13:02:19 - INFO - [modeling.py:991] - We will use 90% of the memory on device 0 for storing the model, and 10% for the buffer to avoid OOM. You can set `max_memory` in to a higher value to use more memory (at your own risk).
2025-07-15 13:02:19 - WARNING - [modeling.py:1114] - The model weights are not tied. Please use the `tie_weights` method before using the `infer_auto_device` function.
2025-07-15 13:02:23 - INFO - [server.py:134] - 模型加载成功，设备: cuda
2025-07-15 13:02:23 - INFO - [server.py:137] - GPU已分配内存: 14.9GB
2025-07-15 13:02:23 - INFO - [server.py:512] - ==================================================
2025-07-15 13:02:23 - INFO - [server.py:513] - 🚀 LLaDA后端服务启动
2025-07-15 13:02:23 - INFO - [server.py:514] - 启动时间: 2025-07-15T13:02:23.676745
2025-07-15 13:02:23 - INFO - [server.py:515] - Python版本: 3.12.3 | packaged by Anaconda, Inc. | (main, May  6 2024, 19:46:43) [GCC 11.2.0]
2025-07-15 13:02:23 - INFO - [server.py:516] - 工作目录: /root/LLaDA-main/lldm
2025-07-15 13:02:23 - INFO - [server.py:517] - 设备: cuda
2025-07-15 13:02:23 - INFO - [server.py:519] - GPU内存: 23.5GB
2025-07-15 13:02:23 - INFO - [server.py:520] - ==================================================
2025-07-15 13:02:23 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:9000
 * Running on http://172.17.0.11:9000
2025-07-15 13:02:23 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-07-15 13:02:24 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "curl/7.81.0",
  "timestamp": "2025-07-15T13:02:24.249137"
}
2025-07-15 13:02:24 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:02:24.250268",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:02:24 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:02:24] "GET /health HTTP/1.1" 200 -
2025-07-15 13:02:33 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "python-requests/2.31.0",
  "timestamp": "2025-07-15T13:02:33.169485"
}
2025-07-15 13:02:33 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:02:33.170325",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:02:33 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:02:33] "GET /health HTTP/1.1" 200 -
2025-07-15 13:02:34 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "python-requests/2.31.0",
  "timestamp": "2025-07-15T13:02:34.177954",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "你好"
      }
    ],
    "settings": {
      "gen_length": 16,
      "steps": 8,
      "temperature": 0.0,
      "cfg_scale": 0.0
    }
  }
}
2025-07-15 13:02:34 - INFO - [server.py:448] - [req_1752555754178] 收到生成请求
2025-07-15 13:02:34 - INFO - [server.py:456] - [req_1752555754178] 请求数据详情:
2025-07-15 13:02:34 - INFO - [server.py:457] - [req_1752555754178] - 消息数量: 1
2025-07-15 13:02:34 - INFO - [server.py:458] - [req_1752555754178] - 设置参数: {
  "gen_length": 16,
  "steps": 8,
  "temperature": 0.0,
  "cfg_scale": 0.0
}
2025-07-15 13:02:34 - DEBUG - [server.py:459] - [req_1752555754178] - 完整消息列表: [
  {
    "role": "user",
    "content": "你好"
  }
]
2025-07-15 13:02:34 - INFO - [server.py:470] - [req_1752555754178] 开始生成响应...
2025-07-15 13:02:34 - INFO - [server.py:206] - ============================================================
2025-07-15 13:02:34 - INFO - [server.py:207] - 开始生成响应
2025-07-15 13:02:34 - INFO - [server.py:208] - 输入消息数量: 1
2025-07-15 13:02:34 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=2
2025-07-15 13:02:34 - DEBUG - [server.py:211] - 消息 1 内容: 你好
2025-07-15 13:02:34 - INFO - [server.py:213] - 设置参数: {
  "gen_length": 16,
  "steps": 8,
  "temperature": 0.0,
  "cfg_scale": 0.0
}
2025-07-15 13:02:34 - INFO - [server.py:225] - 解析后的约束: {}
2025-07-15 13:02:34 - INFO - [server.py:230] - 生成前GPU内存使用: 14.93GB
2025-07-15 13:02:34 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 13:02:34 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 13:02:34 - INFO - [server.py:239] - 输入token数量: 14
2025-07-15 13:02:34 - INFO - [server.py:246] - 序列总长度: 30, prompt长度: 14, 生成长度: 16
2025-07-15 13:02:34 - INFO - [server.py:255] - 应用约束数量: 0
2025-07-15 13:02:34 - INFO - [server.py:275] - 块处理配置: 块长度=16, 块数量=1, 每块步数=8
2025-07-15 13:02:34 - INFO - [server.py:279] - 处理第 1/1 块...
2025-07-15 13:02:34 - DEBUG - [server.py:294] - 块 1, 步骤 1/8
2025-07-15 13:02:34 - DEBUG - [server.py:294] - 块 1, 步骤 2/8
2025-07-15 13:02:34 - DEBUG - [server.py:294] - 块 1, 步骤 3/8
2025-07-15 13:02:34 - DEBUG - [server.py:294] - 块 1, 步骤 4/8
2025-07-15 13:02:34 - DEBUG - [server.py:294] - 块 1, 步骤 5/8
2025-07-15 13:02:34 - DEBUG - [server.py:294] - 块 1, 步骤 6/8
2025-07-15 13:02:34 - DEBUG - [server.py:294] - 块 1, 步骤 7/8
2025-07-15 13:02:34 - DEBUG - [server.py:294] - 块 1, 步骤 8/8
2025-07-15 13:02:34 - INFO - [server.py:400] - 生成后GPU内存使用: 15.36GB
2025-07-15 13:02:34 - INFO - [server.py:402] - 生成完成!
2025-07-15 13:02:34 - INFO - [server.py:403] - 响应文本长度: 17
2025-07-15 13:02:34 - INFO - [server.py:404] - 可视化步骤数: 9
2025-07-15 13:02:34 - INFO - [server.py:405] - 生成耗时: 0.75秒
2025-07-15 13:02:34 - DEBUG - [server.py:406] - 生成的响应文本: 你好！有什么我可以可以帮助你的吗？
2025-07-15 13:02:34 - INFO - [server.py:407] - ============================================================
2025-07-15 13:02:34 - INFO - [server.py:479] - [req_1752555754178] 生成成功!
2025-07-15 13:02:34 - INFO - [server.py:480] - [req_1752555754178] 响应长度: 17
2025-07-15 13:02:34 - INFO - [server.py:481] - [req_1752555754178] 可视化步骤: 9
2025-07-15 13:02:34 - INFO - [server.py:482] - [req_1752555754178] 总耗时: 0.75秒
2025-07-15 13:02:34 - DEBUG - [server.py:483] - [req_1752555754178] 响应文本: 你好！有什么我可以可以帮助你的吗？
2025-07-15 13:02:34 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 3663,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:02:34.933659"
}
2025-07-15 13:02:34 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:02:34] "POST /generate HTTP/1.1" 200 -
2025-07-15 13:02:35 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "python-requests/2.31.0",
  "timestamp": "2025-07-15T13:02:35.940624",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "今天天气怎么样？"
      }
    ],
    "settings": {
      "gen_length": 12,
      "steps": 6,
      "temperature": 0.0,
      "constraints": "0:今天, 2:天气, 4:很好"
    }
  }
}
2025-07-15 13:02:35 - INFO - [server.py:448] - [req_1752555755941] 收到生成请求
2025-07-15 13:02:35 - INFO - [server.py:456] - [req_1752555755941] 请求数据详情:
2025-07-15 13:02:35 - INFO - [server.py:457] - [req_1752555755941] - 消息数量: 1
2025-07-15 13:02:35 - INFO - [server.py:458] - [req_1752555755941] - 设置参数: {
  "gen_length": 12,
  "steps": 6,
  "temperature": 0.0,
  "constraints": "0:今天, 2:天气, 4:很好"
}
2025-07-15 13:02:35 - DEBUG - [server.py:459] - [req_1752555755941] - 完整消息列表: [
  {
    "role": "user",
    "content": "今天天气怎么样？"
  }
]
2025-07-15 13:02:35 - INFO - [server.py:470] - [req_1752555755941] 开始生成响应...
2025-07-15 13:02:35 - INFO - [server.py:206] - ============================================================
2025-07-15 13:02:35 - INFO - [server.py:207] - 开始生成响应
2025-07-15 13:02:35 - INFO - [server.py:208] - 输入消息数量: 1
2025-07-15 13:02:35 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=8
2025-07-15 13:02:35 - DEBUG - [server.py:211] - 消息 1 内容: 今天天气怎么样？
2025-07-15 13:02:35 - INFO - [server.py:213] - 设置参数: {
  "gen_length": 12,
  "steps": 6,
  "temperature": 0.0,
  "constraints": "0:今天, 2:天气, 4:很好"
}
2025-07-15 13:02:35 - INFO - [server.py:225] - 解析后的约束: {0: '今天', 2: '天气', 4: '很好'}
2025-07-15 13:02:35 - INFO - [server.py:230] - 生成前GPU内存使用: 14.94GB
2025-07-15 13:02:35 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 13:02:35 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

今天天气怎么样？<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 13:02:35 - INFO - [server.py:239] - 输入token数量: 17
2025-07-15 13:02:35 - INFO - [server.py:246] - 序列总长度: 29, prompt长度: 17, 生成长度: 12
2025-07-15 13:02:35 - INFO - [server.py:255] - 应用约束数量: 5
2025-07-15 13:02:35 - DEBUG - [server.py:260] - 约束位置 0 (绝对位置 17): token_id=34808
2025-07-15 13:02:35 - DEBUG - [server.py:260] - 约束位置 2 (绝对位置 19): token_id=220
2025-07-15 13:02:35 - DEBUG - [server.py:260] - 约束位置 3 (绝对位置 20): token_id=13092
2025-07-15 13:02:35 - DEBUG - [server.py:260] - 约束位置 4 (绝对位置 21): token_id=220
2025-07-15 13:02:35 - DEBUG - [server.py:260] - 约束位置 5 (绝对位置 22): token_id=9052
2025-07-15 13:02:35 - INFO - [server.py:275] - 块处理配置: 块长度=12, 块数量=1, 每块步数=6
2025-07-15 13:02:35 - INFO - [server.py:279] - 处理第 1/1 块...
2025-07-15 13:02:35 - DEBUG - [server.py:294] - 块 1, 步骤 1/6
2025-07-15 13:02:36 - DEBUG - [server.py:294] - 块 1, 步骤 2/6
2025-07-15 13:02:36 - DEBUG - [server.py:294] - 块 1, 步骤 3/6
2025-07-15 13:02:36 - DEBUG - [server.py:294] - 块 1, 步骤 4/6
2025-07-15 13:02:36 - DEBUG - [server.py:294] - 块 1, 步骤 5/6
2025-07-15 13:02:36 - DEBUG - [server.py:294] - 块 1, 步骤 6/6
2025-07-15 13:02:36 - INFO - [server.py:400] - 生成后GPU内存使用: 15.35GB
2025-07-15 13:02:36 - INFO - [server.py:402] - 生成完成!
2025-07-15 13:02:36 - INFO - [server.py:403] - 响应文本长度: 22
2025-07-15 13:02:36 - INFO - [server.py:404] - 可视化步骤数: 7
2025-07-15 13:02:36 - INFO - [server.py:405] - 生成耗时: 0.31秒
2025-07-15 13:02:36 - DEBUG - [server.py:406] - 生成的响应文本:  今天 的 天气 很好，阳光明媚，气温适宜。
2025-07-15 13:02:36 - INFO - [server.py:407] - ============================================================
2025-07-15 13:02:36 - INFO - [server.py:479] - [req_1752555755941] 生成成功!
2025-07-15 13:02:36 - INFO - [server.py:480] - [req_1752555755941] 响应长度: 22
2025-07-15 13:02:36 - INFO - [server.py:481] - [req_1752555755941] 可视化步骤: 7
2025-07-15 13:02:36 - INFO - [server.py:482] - [req_1752555755941] 总耗时: 0.31秒
2025-07-15 13:02:36 - DEBUG - [server.py:483] - [req_1752555755941] 响应文本:  今天 的 天气 很好，阳光明媚，气温适宜。
2025-07-15 13:02:36 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 2157,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:02:36.254769"
}
2025-07-15 13:02:36 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:02:36] "POST /generate HTTP/1.1" 200 -
2025-07-15 13:03:03 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:03.126659"
}
2025-07-15 13:03:03 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:03:03.128107",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:03:03 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:03] "GET /health HTTP/1.1" 200 -
2025-07-15 13:03:03 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:03.657394"
}
2025-07-15 13:03:03 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:03:03.658194",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:03:03 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:03] "GET /health HTTP/1.1" 200 -
2025-07-15 13:03:06 - INFO - [server.py:78] - 收到请求: {
  "method": "OPTIONS",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:06.596245"
}
2025-07-15 13:03:06 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": null,
  "content_type": "text/html; charset=utf-8",
  "timestamp": "2025-07-15T13:03:06.597251"
}
2025-07-15 13:03:06 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:06] "OPTIONS /generate HTTP/1.1" 200 -
2025-07-15 13:03:06 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:06.654091",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "你好"
      }
    ],
    "settings": {
      "temperature": 0,
      "top_p": 0.95,
      "gen_length": 50,
      "num_beams": 4,
      "steps": 32,
      "cfg_scale": 1,
      "constraints": ""
    }
  }
}
2025-07-15 13:03:06 - INFO - [server.py:448] - [req_1752555786654] 收到生成请求
2025-07-15 13:03:06 - INFO - [server.py:456] - [req_1752555786654] 请求数据详情:
2025-07-15 13:03:06 - INFO - [server.py:457] - [req_1752555786654] - 消息数量: 1
2025-07-15 13:03:06 - INFO - [server.py:458] - [req_1752555786654] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 13:03:06 - DEBUG - [server.py:459] - [req_1752555786654] - 完整消息列表: [
  {
    "role": "user",
    "content": "你好"
  }
]
2025-07-15 13:03:06 - INFO - [server.py:470] - [req_1752555786654] 开始生成响应...
2025-07-15 13:03:06 - INFO - [server.py:206] - ============================================================
2025-07-15 13:03:06 - INFO - [server.py:207] - 开始生成响应
2025-07-15 13:03:06 - INFO - [server.py:208] - 输入消息数量: 1
2025-07-15 13:03:06 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=2
2025-07-15 13:03:06 - DEBUG - [server.py:211] - 消息 1 内容: 你好
2025-07-15 13:03:06 - INFO - [server.py:213] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 13:03:06 - INFO - [server.py:225] - 解析后的约束: {}
2025-07-15 13:03:06 - INFO - [server.py:230] - 生成前GPU内存使用: 14.94GB
2025-07-15 13:03:06 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 13:03:06 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 13:03:06 - INFO - [server.py:239] - 输入token数量: 14
2025-07-15 13:03:06 - INFO - [server.py:246] - 序列总长度: 64, prompt长度: 14, 生成长度: 50
2025-07-15 13:03:06 - INFO - [server.py:255] - 应用约束数量: 0
2025-07-15 13:03:06 - INFO - [server.py:275] - 块处理配置: 块长度=32, 块数量=2, 每块步数=16
2025-07-15 13:03:06 - INFO - [server.py:279] - 处理第 1/2 块...
2025-07-15 13:03:06 - DEBUG - [server.py:294] - 块 1, 步骤 1/16
2025-07-15 13:03:06 - DEBUG - [server.py:294] - 块 1, 步骤 2/16
2025-07-15 13:03:06 - DEBUG - [server.py:294] - 块 1, 步骤 3/16
2025-07-15 13:03:06 - DEBUG - [server.py:294] - 块 1, 步骤 4/16
2025-07-15 13:03:06 - DEBUG - [server.py:294] - 块 1, 步骤 5/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 6/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 7/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 8/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 9/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 10/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 11/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 12/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 13/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 14/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 15/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 1, 步骤 16/16
2025-07-15 13:03:07 - INFO - [server.py:279] - 处理第 2/2 块...
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 2, 步骤 1/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 2, 步骤 2/16
2025-07-15 13:03:07 - DEBUG - [server.py:294] - 块 2, 步骤 3/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 4/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 5/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 6/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 7/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 8/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 9/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 10/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 11/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 12/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 13/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 14/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 15/16
2025-07-15 13:03:08 - DEBUG - [server.py:294] - 块 2, 步骤 16/16
2025-07-15 13:03:08 - INFO - [server.py:400] - 生成后GPU内存使用: 16.65GB
2025-07-15 13:03:08 - INFO - [server.py:402] - 生成完成!
2025-07-15 13:03:08 - INFO - [server.py:403] - 响应文本长度: 15
2025-07-15 13:03:08 - INFO - [server.py:404] - 可视化步骤数: 33
2025-07-15 13:03:08 - INFO - [server.py:405] - 生成耗时: 2.22秒
2025-07-15 13:03:08 - DEBUG - [server.py:406] - 生成的响应文本: 你好！有什么我可以帮助你的吗？
2025-07-15 13:03:08 - INFO - [server.py:407] - ============================================================
2025-07-15 13:03:08 - INFO - [server.py:479] - [req_1752555786654] 生成成功!
2025-07-15 13:03:08 - INFO - [server.py:480] - [req_1752555786654] 响应长度: 15
2025-07-15 13:03:08 - INFO - [server.py:481] - [req_1752555786654] 可视化步骤: 33
2025-07-15 13:03:08 - INFO - [server.py:482] - [req_1752555786654] 总耗时: 2.23秒
2025-07-15 13:03:08 - DEBUG - [server.py:483] - [req_1752555786654] 响应文本: 你好！有什么我可以帮助你的吗？
2025-07-15 13:03:08 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 41225,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:03:08.885261"
}
2025-07-15 13:03:08 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:08] "POST /generate HTTP/1.1" 200 -
2025-07-15 13:03:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:25.876972"
}
2025-07-15 13:03:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:03:25.877872",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:03:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:25] "GET /health HTTP/1.1" 200 -
2025-07-15 13:03:26 - INFO - [server.py:78] - 收到请求: {
  "method": "OPTIONS",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:26.573250"
}
2025-07-15 13:03:26 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": null,
  "content_type": "text/html; charset=utf-8",
  "timestamp": "2025-07-15T13:03:26.574374"
}
2025-07-15 13:03:26 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:26] "OPTIONS /generate HTTP/1.1" 200 -
2025-07-15 13:03:27 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:27.206896",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "你好"
      },
      {
        "role": "assistant",
        "content": "你好！有什么我可以帮助你的吗？"
      },
      {
        "role": "user",
        "content": "你好吗"
      }
    ],
    "settings": {
      "temperature": 0,
      "top_p": 0.95,
      "gen_length": 50,
      "num_beams": 4,
      "steps": 32,
      "cfg_scale": 1,
      "constraints": ""
    }
  }
}
2025-07-15 13:03:27 - INFO - [server.py:448] - [req_1752555807207] 收到生成请求
2025-07-15 13:03:27 - INFO - [server.py:456] - [req_1752555807207] 请求数据详情:
2025-07-15 13:03:27 - INFO - [server.py:457] - [req_1752555807207] - 消息数量: 3
2025-07-15 13:03:27 - INFO - [server.py:458] - [req_1752555807207] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 13:03:27 - DEBUG - [server.py:459] - [req_1752555807207] - 完整消息列表: [
  {
    "role": "user",
    "content": "你好"
  },
  {
    "role": "assistant",
    "content": "你好！有什么我可以帮助你的吗？"
  },
  {
    "role": "user",
    "content": "你好吗"
  }
]
2025-07-15 13:03:27 - INFO - [server.py:470] - [req_1752555807207] 开始生成响应...
2025-07-15 13:03:27 - INFO - [server.py:206] - ============================================================
2025-07-15 13:03:27 - INFO - [server.py:207] - 开始生成响应
2025-07-15 13:03:27 - INFO - [server.py:208] - 输入消息数量: 3
2025-07-15 13:03:27 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=2
2025-07-15 13:03:27 - DEBUG - [server.py:211] - 消息 1 内容: 你好
2025-07-15 13:03:27 - INFO - [server.py:210] - 消息 2: 角色=assistant, 内容长度=15
2025-07-15 13:03:27 - DEBUG - [server.py:211] - 消息 2 内容: 你好！有什么我可以帮助你的吗？
2025-07-15 13:03:27 - INFO - [server.py:210] - 消息 3: 角色=user, 内容长度=3
2025-07-15 13:03:27 - DEBUG - [server.py:211] - 消息 3 内容: 你好吗
2025-07-15 13:03:27 - INFO - [server.py:213] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 13:03:27 - INFO - [server.py:225] - 解析后的约束: {}
2025-07-15 13:03:27 - INFO - [server.py:230] - 生成前GPU内存使用: 14.94GB
2025-07-15 13:03:27 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 13:03:27 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>

你好！有什么我可以帮助你的吗？<|eot_id|><|start_header_id|>user<|end_header_id|>

你好吗<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 13:03:27 - INFO - [server.py:239] - 输入token数量: 37
2025-07-15 13:03:27 - INFO - [server.py:246] - 序列总长度: 87, prompt长度: 37, 生成长度: 50
2025-07-15 13:03:27 - INFO - [server.py:255] - 应用约束数量: 0
2025-07-15 13:03:27 - INFO - [server.py:275] - 块处理配置: 块长度=32, 块数量=2, 每块步数=16
2025-07-15 13:03:27 - INFO - [server.py:279] - 处理第 1/2 块...
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 1/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 2/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 3/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 4/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 5/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 6/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 7/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 8/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 9/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 10/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 11/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 12/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 13/16
2025-07-15 13:03:27 - DEBUG - [server.py:294] - 块 1, 步骤 14/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 1, 步骤 15/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 1, 步骤 16/16
2025-07-15 13:03:28 - INFO - [server.py:279] - 处理第 2/2 块...
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 1/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 2/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 3/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 4/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 5/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 6/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 7/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 8/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 9/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 10/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 11/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 12/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 13/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 14/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 15/16
2025-07-15 13:03:28 - DEBUG - [server.py:294] - 块 2, 步骤 16/16
2025-07-15 13:03:28 - INFO - [server.py:400] - 生成后GPU内存使用: 17.31GB
2025-07-15 13:03:28 - INFO - [server.py:402] - 生成完成!
2025-07-15 13:03:28 - INFO - [server.py:403] - 响应文本长度: 20
2025-07-15 13:03:28 - INFO - [server.py:404] - 可视化步骤数: 33
2025-07-15 13:03:28 - INFO - [server.py:405] - 生成耗时: 1.76秒
2025-07-15 13:03:28 - DEBUG - [server.py:406] - 生成的响应文本: 是的，我好！有什么我可以可以帮助你的吗？
2025-07-15 13:03:28 - INFO - [server.py:407] - ============================================================
2025-07-15 13:03:28 - INFO - [server.py:479] - [req_1752555807207] 生成成功!
2025-07-15 13:03:28 - INFO - [server.py:480] - [req_1752555807207] 响应长度: 20
2025-07-15 13:03:28 - INFO - [server.py:481] - [req_1752555807207] 可视化步骤: 33
2025-07-15 13:03:28 - INFO - [server.py:482] - [req_1752555807207] 总耗时: 1.77秒
2025-07-15 13:03:28 - DEBUG - [server.py:483] - [req_1752555807207] 响应文本: 是的，我好！有什么我可以可以帮助你的吗？
2025-07-15 13:03:28 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 41303,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:03:28.976451"
}
2025-07-15 13:03:28 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:28] "POST /generate HTTP/1.1" 200 -
2025-07-15 13:03:32 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:32.839904"
}
2025-07-15 13:03:32 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:03:32.840748",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:03:32 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:32] "GET /health HTTP/1.1" 200 -
2025-07-15 13:03:49 - INFO - [server.py:78] - 收到请求: {
  "method": "OPTIONS",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:49.269886"
}
2025-07-15 13:03:49 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": null,
  "content_type": "text/html; charset=utf-8",
  "timestamp": "2025-07-15T13:03:49.270770"
}
2025-07-15 13:03:49 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:49] "OPTIONS /generate HTTP/1.1" 200 -
2025-07-15 13:03:49 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:03:49.349187",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "你好"
      },
      {
        "role": "assistant",
        "content": "你好！有什么我可以帮助你的吗？"
      },
      {
        "role": "user",
        "content": "你好吗"
      },
      {
        "role": "assistant",
        "content": "是的，我好！有什么我可以可以帮助你的吗？"
      },
      {
        "role": "user",
        "content": "你好"
      }
    ],
    "settings": {
      "temperature": 0,
      "top_p": 0.95,
      "gen_length": 50,
      "num_beams": 4,
      "steps": 32,
      "cfg_scale": 1,
      "constraints": ""
    }
  }
}
2025-07-15 13:03:49 - INFO - [server.py:448] - [req_1752555829349] 收到生成请求
2025-07-15 13:03:49 - INFO - [server.py:456] - [req_1752555829349] 请求数据详情:
2025-07-15 13:03:49 - INFO - [server.py:457] - [req_1752555829349] - 消息数量: 5
2025-07-15 13:03:49 - INFO - [server.py:458] - [req_1752555829349] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 13:03:49 - DEBUG - [server.py:459] - [req_1752555829349] - 完整消息列表: [
  {
    "role": "user",
    "content": "你好"
  },
  {
    "role": "assistant",
    "content": "你好！有什么我可以帮助你的吗？"
  },
  {
    "role": "user",
    "content": "你好吗"
  },
  {
    "role": "assistant",
    "content": "是的，我好！有什么我可以可以帮助你的吗？"
  },
  {
    "role": "user",
    "content": "你好"
  }
]
2025-07-15 13:03:49 - INFO - [server.py:470] - [req_1752555829349] 开始生成响应...
2025-07-15 13:03:49 - INFO - [server.py:206] - ============================================================
2025-07-15 13:03:49 - INFO - [server.py:207] - 开始生成响应
2025-07-15 13:03:49 - INFO - [server.py:208] - 输入消息数量: 5
2025-07-15 13:03:49 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=2
2025-07-15 13:03:49 - DEBUG - [server.py:211] - 消息 1 内容: 你好
2025-07-15 13:03:49 - INFO - [server.py:210] - 消息 2: 角色=assistant, 内容长度=15
2025-07-15 13:03:49 - DEBUG - [server.py:211] - 消息 2 内容: 你好！有什么我可以帮助你的吗？
2025-07-15 13:03:49 - INFO - [server.py:210] - 消息 3: 角色=user, 内容长度=3
2025-07-15 13:03:49 - DEBUG - [server.py:211] - 消息 3 内容: 你好吗
2025-07-15 13:03:49 - INFO - [server.py:210] - 消息 4: 角色=assistant, 内容长度=20
2025-07-15 13:03:49 - DEBUG - [server.py:211] - 消息 4 内容: 是的，我好！有什么我可以可以帮助你的吗？
2025-07-15 13:03:49 - INFO - [server.py:210] - 消息 5: 角色=user, 内容长度=2
2025-07-15 13:03:49 - DEBUG - [server.py:211] - 消息 5 内容: 你好
2025-07-15 13:03:49 - INFO - [server.py:213] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 13:03:49 - INFO - [server.py:225] - 解析后的约束: {}
2025-07-15 13:03:49 - INFO - [server.py:230] - 生成前GPU内存使用: 14.94GB
2025-07-15 13:03:49 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 13:03:49 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>

你好！有什么我可以帮助你的吗？<|eot_id|><|start_header_id|>user<|end_header_id|>

你好吗<|eot_id|><|start_header_id|>assistant<|end_header_id|>

是的，我好！有什么我可以可以帮助你的吗？<|eot_id|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 13:03:49 - INFO - [server.py:239] - 输入token数量: 61
2025-07-15 13:03:49 - INFO - [server.py:246] - 序列总长度: 111, prompt长度: 61, 生成长度: 50
2025-07-15 13:03:49 - INFO - [server.py:255] - 应用约束数量: 0
2025-07-15 13:03:49 - INFO - [server.py:275] - 块处理配置: 块长度=32, 块数量=2, 每块步数=16
2025-07-15 13:03:49 - INFO - [server.py:279] - 处理第 1/2 块...
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 1/16
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 2/16
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 3/16
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 4/16
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 5/16
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 6/16
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 7/16
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 8/16
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 9/16
2025-07-15 13:03:49 - DEBUG - [server.py:294] - 块 1, 步骤 10/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 1, 步骤 11/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 1, 步骤 12/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 1, 步骤 13/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 1, 步骤 14/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 1, 步骤 15/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 1, 步骤 16/16
2025-07-15 13:03:50 - INFO - [server.py:279] - 处理第 2/2 块...
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 2, 步骤 1/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 2, 步骤 2/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 2, 步骤 3/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 2, 步骤 4/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 2, 步骤 5/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 2, 步骤 6/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 2, 步骤 7/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 2, 步骤 8/16
2025-07-15 13:03:50 - DEBUG - [server.py:294] - 块 2, 步骤 9/16
2025-07-15 13:03:51 - DEBUG - [server.py:294] - 块 2, 步骤 10/16
2025-07-15 13:03:51 - DEBUG - [server.py:294] - 块 2, 步骤 11/16
2025-07-15 13:03:51 - DEBUG - [server.py:294] - 块 2, 步骤 12/16
2025-07-15 13:03:51 - DEBUG - [server.py:294] - 块 2, 步骤 13/16
2025-07-15 13:03:51 - DEBUG - [server.py:294] - 块 2, 步骤 14/16
2025-07-15 13:03:51 - DEBUG - [server.py:294] - 块 2, 步骤 15/16
2025-07-15 13:03:51 - DEBUG - [server.py:294] - 块 2, 步骤 16/16
2025-07-15 13:03:51 - INFO - [server.py:400] - 生成后GPU内存使用: 17.95GB
2025-07-15 13:03:51 - INFO - [server.py:402] - 生成完成!
2025-07-15 13:03:51 - INFO - [server.py:403] - 响应文本长度: 17
2025-07-15 13:03:51 - INFO - [server.py:404] - 可视化步骤数: 33
2025-07-15 13:03:51 - INFO - [server.py:405] - 生成耗时: 2.03秒
2025-07-15 13:03:51 - DEBUG - [server.py:406] - 生成的响应文本: 你好！有什么我可以可以帮助你的吗？
2025-07-15 13:03:51 - INFO - [server.py:407] - ============================================================
2025-07-15 13:03:51 - INFO - [server.py:479] - [req_1752555829349] 生成成功!
2025-07-15 13:03:51 - INFO - [server.py:480] - [req_1752555829349] 响应长度: 17
2025-07-15 13:03:51 - INFO - [server.py:481] - [req_1752555829349] 可视化步骤: 33
2025-07-15 13:03:51 - INFO - [server.py:482] - [req_1752555829349] 总耗时: 2.03秒
2025-07-15 13:03:51 - DEBUG - [server.py:483] - [req_1752555829349] 响应文本: 你好！有什么我可以可以帮助你的吗？
2025-07-15 13:03:51 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 41484,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:03:51.384299"
}
2025-07-15 13:03:51 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:03:51] "POST /generate HTTP/1.1" 200 -
2025-07-15 13:04:03 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:04:03.306956"
}
2025-07-15 13:04:03 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:04:03.307798",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:04:03 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:04:03] "GET /health HTTP/1.1" 200 -
2025-07-15 13:04:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:04:25.315281"
}
2025-07-15 13:04:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:04:25.316122",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:04:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:04:25] "GET /health HTTP/1.1" 200 -
2025-07-15 13:04:33 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:04:33.881241"
}
2025-07-15 13:04:33 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:04:33.882100",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:04:33 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:04:33] "GET /health HTTP/1.1" 200 -
2025-07-15 13:05:02 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:05:02.860184"
}
2025-07-15 13:05:02 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:05:02.860677",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:05:02 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:05:02] "GET /health HTTP/1.1" 200 -
2025-07-15 13:05:24 - INFO - [server.py:78] - 收到请求: {
  "method": "OPTIONS",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:05:24.127482"
}
2025-07-15 13:05:24 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": null,
  "content_type": "text/html; charset=utf-8",
  "timestamp": "2025-07-15T13:05:24.128402"
}
2025-07-15 13:05:24 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:05:24] "OPTIONS /generate HTTP/1.1" 200 -
2025-07-15 13:05:24 - INFO - [server.py:78] - 收到请求: {
  "method": "POST",
  "url": "http://localhost:9000/generate",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:05:24.324339",
  "json_data": {
    "messages": [
      {
        "role": "user",
        "content": "你好"
      },
      {
        "role": "assistant",
        "content": "你好！有什么我可以帮助你的吗？"
      },
      {
        "role": "user",
        "content": "你好吗"
      },
      {
        "role": "assistant",
        "content": "是的，我好！有什么我可以可以帮助你的吗？"
      },
      {
        "role": "user",
        "content": "你好"
      },
      {
        "role": "assistant",
        "content": "你好！有什么我可以可以帮助你的吗？"
      },
      {
        "role": "user",
        "content": "你好"
      }
    ],
    "settings": {
      "temperature": 0,
      "top_p": 0.95,
      "gen_length": 50,
      "num_beams": 4,
      "steps": 32,
      "cfg_scale": 1,
      "constraints": ""
    }
  }
}
2025-07-15 13:05:24 - INFO - [server.py:448] - [req_1752555924325] 收到生成请求
2025-07-15 13:05:24 - INFO - [server.py:456] - [req_1752555924325] 请求数据详情:
2025-07-15 13:05:24 - INFO - [server.py:457] - [req_1752555924325] - 消息数量: 7
2025-07-15 13:05:24 - INFO - [server.py:458] - [req_1752555924325] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 13:05:24 - DEBUG - [server.py:459] - [req_1752555924325] - 完整消息列表: [
  {
    "role": "user",
    "content": "你好"
  },
  {
    "role": "assistant",
    "content": "你好！有什么我可以帮助你的吗？"
  },
  {
    "role": "user",
    "content": "你好吗"
  },
  {
    "role": "assistant",
    "content": "是的，我好！有什么我可以可以帮助你的吗？"
  },
  {
    "role": "user",
    "content": "你好"
  },
  {
    "role": "assistant",
    "content": "你好！有什么我可以可以帮助你的吗？"
  },
  {
    "role": "user",
    "content": "你好"
  }
]
2025-07-15 13:05:24 - INFO - [server.py:470] - [req_1752555924325] 开始生成响应...
2025-07-15 13:05:24 - INFO - [server.py:206] - ============================================================
2025-07-15 13:05:24 - INFO - [server.py:207] - 开始生成响应
2025-07-15 13:05:24 - INFO - [server.py:208] - 输入消息数量: 7
2025-07-15 13:05:24 - INFO - [server.py:210] - 消息 1: 角色=user, 内容长度=2
2025-07-15 13:05:24 - DEBUG - [server.py:211] - 消息 1 内容: 你好
2025-07-15 13:05:24 - INFO - [server.py:210] - 消息 2: 角色=assistant, 内容长度=15
2025-07-15 13:05:24 - DEBUG - [server.py:211] - 消息 2 内容: 你好！有什么我可以帮助你的吗？
2025-07-15 13:05:24 - INFO - [server.py:210] - 消息 3: 角色=user, 内容长度=3
2025-07-15 13:05:24 - DEBUG - [server.py:211] - 消息 3 内容: 你好吗
2025-07-15 13:05:24 - INFO - [server.py:210] - 消息 4: 角色=assistant, 内容长度=20
2025-07-15 13:05:24 - DEBUG - [server.py:211] - 消息 4 内容: 是的，我好！有什么我可以可以帮助你的吗？
2025-07-15 13:05:24 - INFO - [server.py:210] - 消息 5: 角色=user, 内容长度=2
2025-07-15 13:05:24 - DEBUG - [server.py:211] - 消息 5 内容: 你好
2025-07-15 13:05:24 - INFO - [server.py:210] - 消息 6: 角色=assistant, 内容长度=17
2025-07-15 13:05:24 - DEBUG - [server.py:211] - 消息 6 内容: 你好！有什么我可以可以帮助你的吗？
2025-07-15 13:05:24 - INFO - [server.py:210] - 消息 7: 角色=user, 内容长度=2
2025-07-15 13:05:24 - DEBUG - [server.py:211] - 消息 7 内容: 你好
2025-07-15 13:05:24 - INFO - [server.py:213] - 设置参数: {
  "temperature": 0,
  "top_p": 0.95,
  "gen_length": 50,
  "num_beams": 4,
  "steps": 32,
  "cfg_scale": 1,
  "constraints": ""
}
2025-07-15 13:05:24 - INFO - [server.py:225] - 解析后的约束: {}
2025-07-15 13:05:24 - INFO - [server.py:230] - 生成前GPU内存使用: 14.94GB
2025-07-15 13:05:24 - INFO - [server.py:233] - 准备输入prompt...
2025-07-15 13:05:24 - DEBUG - [server.py:235] - 格式化后的chat输入: <|startoftext|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>

你好！有什么我可以帮助你的吗？<|eot_id|><|start_header_id|>user<|end_header_id|>

你好吗<|eot_id|><|start_header_id|>assistant<|end_header_id|>

是的，我好！有什么我可以可以帮助你的吗？<|eot_id|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>

你好！有什么我可以可以帮助你的吗？<|eot_id|><|start_header_id|>user<|end_header_id|>

你好<|eot_id|><|start_header_id|>assistant<|end_header_id|>


2025-07-15 13:05:24 - INFO - [server.py:239] - 输入token数量: 83
2025-07-15 13:05:24 - INFO - [server.py:246] - 序列总长度: 133, prompt长度: 83, 生成长度: 50
2025-07-15 13:05:24 - INFO - [server.py:255] - 应用约束数量: 0
2025-07-15 13:05:24 - INFO - [server.py:275] - 块处理配置: 块长度=32, 块数量=2, 每块步数=16
2025-07-15 13:05:24 - INFO - [server.py:279] - 处理第 1/2 块...
2025-07-15 13:05:24 - DEBUG - [server.py:294] - 块 1, 步骤 1/16
2025-07-15 13:05:24 - DEBUG - [server.py:294] - 块 1, 步骤 2/16
2025-07-15 13:05:24 - DEBUG - [server.py:294] - 块 1, 步骤 3/16
2025-07-15 13:05:24 - DEBUG - [server.py:294] - 块 1, 步骤 4/16
2025-07-15 13:05:24 - DEBUG - [server.py:294] - 块 1, 步骤 5/16
2025-07-15 13:05:24 - DEBUG - [server.py:294] - 块 1, 步骤 6/16
2025-07-15 13:05:24 - DEBUG - [server.py:294] - 块 1, 步骤 7/16
2025-07-15 13:05:24 - DEBUG - [server.py:294] - 块 1, 步骤 8/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 1, 步骤 9/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 1, 步骤 10/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 1, 步骤 11/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 1, 步骤 12/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 1, 步骤 13/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 1, 步骤 14/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 1, 步骤 15/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 1, 步骤 16/16
2025-07-15 13:05:25 - INFO - [server.py:279] - 处理第 2/2 块...
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 2, 步骤 1/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 2, 步骤 2/16
2025-07-15 13:05:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:05:25.807842"
}
2025-07-15 13:05:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:05:25.809404",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:05:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:05:25] "GET /health HTTP/1.1" 200 -
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 2, 步骤 3/16
2025-07-15 13:05:25 - DEBUG - [server.py:294] - 块 2, 步骤 4/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 5/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 6/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 7/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 8/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 9/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 10/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 11/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 12/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 13/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 14/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 15/16
2025-07-15 13:05:26 - DEBUG - [server.py:294] - 块 2, 步骤 16/16
2025-07-15 13:05:26 - INFO - [server.py:400] - 生成后GPU内存使用: 18.45GB
2025-07-15 13:05:26 - INFO - [server.py:402] - 生成完成!
2025-07-15 13:05:26 - INFO - [server.py:403] - 响应文本长度: 17
2025-07-15 13:05:26 - INFO - [server.py:404] - 可视化步骤数: 33
2025-07-15 13:05:26 - INFO - [server.py:405] - 生成耗时: 2.65秒
2025-07-15 13:05:26 - DEBUG - [server.py:406] - 生成的响应文本: 你好！有什么我可以可以帮助你的吗？
2025-07-15 13:05:26 - INFO - [server.py:407] - ============================================================
2025-07-15 13:05:26 - INFO - [server.py:479] - [req_1752555924325] 生成成功!
2025-07-15 13:05:26 - INFO - [server.py:480] - [req_1752555924325] 响应长度: 17
2025-07-15 13:05:26 - INFO - [server.py:481] - [req_1752555924325] 可视化步骤: 33
2025-07-15 13:05:26 - INFO - [server.py:482] - [req_1752555924325] 总耗时: 2.66秒
2025-07-15 13:05:26 - DEBUG - [server.py:483] - [req_1752555924325] 响应文本: 你好！有什么我可以可以帮助你的吗？
2025-07-15 13:05:26 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 41500,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:05:26.985014"
}
2025-07-15 13:05:26 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:05:26] "POST /generate HTTP/1.1" 200 -
2025-07-15 13:05:33 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:05:33.293465"
}
2025-07-15 13:05:33 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:05:33.294433",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:05:33 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:05:33] "GET /health HTTP/1.1" 200 -
2025-07-15 13:06:02 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:06:02.844437"
}
2025-07-15 13:06:02 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:06:02.845288",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:06:02 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:06:02] "GET /health HTTP/1.1" 200 -
2025-07-15 13:06:26 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:06:26.138382"
}
2025-07-15 13:06:26 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:06:26.139227",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:06:26 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:06:26] "GET /health HTTP/1.1" 200 -
2025-07-15 13:06:33 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:06:33.321957"
}
2025-07-15 13:06:33 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:06:33.323095",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:06:33 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:06:33] "GET /health HTTP/1.1" 200 -
2025-07-15 13:07:03 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:07:03.775774"
}
2025-07-15 13:07:03 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:07:03.776625",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:07:03 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:07:03] "GET /health HTTP/1.1" 200 -
2025-07-15 13:07:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:07:25.330551"
}
2025-07-15 13:07:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:07:25.331485",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:07:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:07:25] "GET /health HTTP/1.1" 200 -
2025-07-15 13:08:05 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:08:05.077555"
}
2025-07-15 13:08:05 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:08:05.078458",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:08:05 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:08:05] "GET /health HTTP/1.1" 200 -
2025-07-15 13:08:27 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:08:27.233700"
}
2025-07-15 13:08:27 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:08:27.234573",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:08:27 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:08:27] "GET /health HTTP/1.1" 200 -
2025-07-15 13:09:05 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:09:05.786350"
}
2025-07-15 13:09:05 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:09:05.787192",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:09:05 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:09:05] "GET /health HTTP/1.1" 200 -
2025-07-15 13:09:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:09:25.326635"
}
2025-07-15 13:09:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:09:25.328081",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:09:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:09:25] "GET /health HTTP/1.1" 200 -
2025-07-15 13:10:06 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:10:06.769713"
}
2025-07-15 13:10:06 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:10:06.770519",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:10:06 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:10:06] "GET /health HTTP/1.1" 200 -
2025-07-15 13:10:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:10:25.329471"
}
2025-07-15 13:10:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:10:25.329775",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:10:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:10:25] "GET /health HTTP/1.1" 200 -
2025-07-15 13:11:07 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:11:07.804877"
}
2025-07-15 13:11:07 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:11:07.805686",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:11:07 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:11:07] "GET /health HTTP/1.1" 200 -
2025-07-15 13:11:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:11:25.397559"
}
2025-07-15 13:11:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:11:25.398520",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:11:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:11:25] "GET /health HTTP/1.1" 200 -
2025-07-15 13:12:08 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:12:08.901241"
}
2025-07-15 13:12:08 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:12:08.902043",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:12:08 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:12:08] "GET /health HTTP/1.1" 200 -
2025-07-15 13:12:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:12:25.333901"
}
2025-07-15 13:12:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:12:25.334762",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:12:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:12:25] "GET /health HTTP/1.1" 200 -
2025-07-15 13:13:10 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:13:10.001985"
}
2025-07-15 13:13:10 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:13:10.002839",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:13:10 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:13:10] "GET /health HTTP/1.1" 200 -
2025-07-15 13:13:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:13:25.426772"
}
2025-07-15 13:13:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:13:25.427525",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:13:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:13:25] "GET /health HTTP/1.1" 200 -
2025-07-15 13:14:10 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:14:10.862253"
}
2025-07-15 13:14:10 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:14:10.863105",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:14:10 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:14:10] "GET /health HTTP/1.1" 200 -
2025-07-15 13:14:25 - INFO - [server.py:78] - 收到请求: {
  "method": "GET",
  "url": "http://localhost:9000/health",
  "remote_addr": "127.0.0.1",
  "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
  "timestamp": "2025-07-15T13:14:25.339675"
}
2025-07-15 13:14:25 - INFO - [server.py:97] - 发送响应: {
  "status_code": 200,
  "content_length": 37,
  "content_type": "application/json",
  "timestamp": "2025-07-15T13:14:25.340537",
  "response_body": "{\"device\":\"cuda\",\"status\":\"healthy\"}\n"
}
2025-07-15 13:14:25 - INFO - [_internal.py:97] - 127.0.0.1 - - [15/Jul/2025 13:14:25] "GET /health HTTP/1.1" 200 -
