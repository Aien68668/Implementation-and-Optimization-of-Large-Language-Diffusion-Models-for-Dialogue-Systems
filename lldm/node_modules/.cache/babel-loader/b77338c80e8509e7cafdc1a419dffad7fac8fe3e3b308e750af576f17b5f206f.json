{"ast":null,"code":"var _jsxFileName = \"/root/LLaDA-main/lldm/src/components/MessageList.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageList = ({\n  messages,\n  isGenerating,\n  serverError,\n  getConfidenceColor,\n  formatTime,\n  messagesEndRef\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: message.sender === 'bot' && message.tokens ?\n          // 优先显示token可视化，除非消息为空\n          message.text && message.text.trim() === '' ?\n          // 消息为空时，删除token格子，显示空文本\n          message.text :\n          /*#__PURE__*/\n          // 有token数据时，显示可视化样式\n          _jsxDEV(\"div\", {\n            className: \"token-container\",\n            children: message.tokens.filter((token, index) => {\n              // 简单过滤：过滤掉空的已生成token（但保留MASK）\n              const isMask = token.char === '[MASK]';\n              const isEmpty = !token.char || token.char.trim() === '';\n\n              // 如果是已生成的空token（非MASK），直接不显示\n              if (token.isGenerated && isEmpty && !isMask) {\n                return false;\n              }\n              return true;\n            }).map((token, filteredIndex) => {\n              const isMask = token.char === '[MASK]';\n\n              // 根据置信度确定CSS类名\n              let confidenceClass = '';\n              if (isMask) {\n                confidenceClass = 'mask-token';\n              } else {\n                // 根据置信度分配类名\n                if (token.confidence < 0.3) {\n                  confidenceClass = 'confidence-low';\n                } else if (token.confidence < 0.7) {\n                  confidenceClass = 'confidence-medium';\n                } else {\n                  confidenceClass = 'confidence-high';\n                }\n\n                // 如果是之前生成的token（颜色为蓝色）\n                if (token.color === '#6699CC') {\n                  confidenceClass = 'confidence-previous';\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `token ${confidenceClass} ${token.isGenerated && !isMask ? 'just-generated' : ''} ${!token.isGenerated ? 'generating' : ''} ${message.isGenerated ? 'final-generated' : ''}`,\n                style: {\n                  animationDelay: token.isGenerated && !isMask ? `${filteredIndex * 0.08}s` : '0s'\n                },\n                children: token.char\n              }, `${message.id}_${token.id || filteredIndex}_${token.char}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this) :\n          // 非bot消息或没有token数据时显示普通文本\n          message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: formatTime(message.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generating-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generating-dots\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u6B63\\u5728\\u751F\\u6210\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u9519\\u8BEF\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), \" \", serverError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageList","messages","isGenerating","serverError","getConfidenceColor","formatTime","messagesEndRef","className","children","map","message","sender","tokens","text","trim","filter","token","index","isMask","char","isEmpty","isGenerated","filteredIndex","confidenceClass","confidence","color","style","animationDelay","id","fileName","_jsxFileName","lineNumber","columnNumber","timestamp","ref","_c","$RefreshReg$"],"sources":["/root/LLaDA-main/lldm/src/components/MessageList.js"],"sourcesContent":["import React from 'react';\n\nconst MessageList = ({ \n  messages, \n  isGenerating, \n  serverError, \n  getConfidenceColor, \n  formatTime, \n  messagesEndRef \n}) => {\n  \n  return (\n    <div className=\"messages-container\">\n      {messages.map((message) => (\n        <div key={message.id} className={`message ${message.sender}`}>\n          <div className=\"message-content\">\n            <div className=\"message-text\">\n              {message.sender === 'bot' && message.tokens ? (\n                // 优先显示token可视化，除非消息为空\n                message.text && message.text.trim() === '' ? (\n                  // 消息为空时，删除token格子，显示空文本\n                  message.text\n                ) : (\n                  // 有token数据时，显示可视化样式\n                  <div className=\"token-container\">\n                    {message.tokens\n                      .filter((token, index) => {\n                        // 简单过滤：过滤掉空的已生成token（但保留MASK）\n                        const isMask = token.char === '[MASK]';\n                        const isEmpty = !token.char || token.char.trim() === '';\n                        \n                        // 如果是已生成的空token（非MASK），直接不显示\n                        if (token.isGenerated && isEmpty && !isMask) {\n                          return false;\n                        }\n                        \n                        return true;\n                      })\n                      .map((token, filteredIndex) => {\n                        const isMask = token.char === '[MASK]';\n                        \n                        // 根据置信度确定CSS类名\n                        let confidenceClass = '';\n                        if (isMask) {\n                          confidenceClass = 'mask-token';\n                        } else {\n                          // 根据置信度分配类名\n                          if (token.confidence < 0.3) {\n                            confidenceClass = 'confidence-low';\n                          } else if (token.confidence < 0.7) {\n                            confidenceClass = 'confidence-medium';\n                          } else {\n                            confidenceClass = 'confidence-high';\n                          }\n                          \n                          // 如果是之前生成的token（颜色为蓝色）\n                          if (token.color === '#6699CC') {\n                            confidenceClass = 'confidence-previous';\n                          }\n                        }\n                        \n                        return (\n                          <span\n                            key={`${message.id}_${token.id || filteredIndex}_${token.char}`}\n                            className={`token ${confidenceClass} ${\n                              token.isGenerated && !isMask ? 'just-generated' : ''\n                            } ${\n                              !token.isGenerated ? 'generating' : ''\n                            } ${\n                              message.isGenerated ? 'final-generated' : ''\n                            }`}\n                            style={{ \n                              animationDelay: token.isGenerated && !isMask ? `${filteredIndex * 0.08}s` : '0s'\n                            }}\n                          >\n                            {token.char}\n                          </span>\n                        );\n                      })}\n                  </div>\n                )\n              ) : (\n                // 非bot消息或没有token数据时显示普通文本\n                message.text\n              )}\n            </div>\n            <div className=\"message-time\">{formatTime(message.timestamp)}</div>\n          </div>\n        </div>\n      ))}\n      \n      {isGenerating && (\n        <div className=\"generating-indicator\">\n          <div className=\"generating-dots\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          <span>正在生成中...</span>\n        </div>\n      )}\n      \n      {serverError && (\n        <div className=\"error-message\">\n          <div className=\"error-content\">\n            <strong>错误：</strong> {serverError}\n          </div>\n        </div>\n      )}\n      \n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default MessageList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}