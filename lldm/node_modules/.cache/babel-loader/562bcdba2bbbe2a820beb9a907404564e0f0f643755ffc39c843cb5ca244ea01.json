{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MessageList=_ref=>{let{messages,isGenerating,serverError,getConfidenceColor,formatTime,messagesEndRef}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[messages.map(message=>/*#__PURE__*/_jsx(\"div\",{className:`message ${message.sender}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:message.sender==='bot'&&message.tokens?/*#__PURE__*/_jsx(\"div\",{className:\"token-container\",children:message.tokens.map((token,index)=>/*#__PURE__*/_jsx(\"span\",{className:`token ${token.isGenerated?'generated':'generating'}`,style:{color:token.color||getConfidenceColor(token.confidence),backgroundColor:token.confidence>0?`rgba(${255*(1-token.confidence)}, ${255*token.confidence}, 0, 0.1)`:'transparent'},children:token.char},index))}):message.text}),/*#__PURE__*/_jsx(\"div\",{className:\"message-time\",children:formatTime(message.timestamp)})]})},message.id)),isGenerating&&/*#__PURE__*/_jsxs(\"div\",{className:\"generating-indicator\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"generating-dots\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u6B63\\u5728\\u751F\\u6210\\u4E2D...\"})]}),serverError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-content\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u9519\\u8BEF\\uFF1A\"}),\" \",serverError]})}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]});};export default MessageList;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","MessageList","_ref","messages","isGenerating","serverError","getConfidenceColor","formatTime","messagesEndRef","className","children","map","message","sender","tokens","token","index","isGenerated","style","color","confidence","backgroundColor","char","text","timestamp","id","ref"],"sources":["/root/LLaDA-main/lldm/src/components/MessageList.js"],"sourcesContent":["import React from 'react';\n\nconst MessageList = ({ \n  messages, \n  isGenerating, \n  serverError, \n  getConfidenceColor, \n  formatTime, \n  messagesEndRef \n}) => {\n  return (\n    <div className=\"messages-container\">\n      {messages.map((message) => (\n        <div key={message.id} className={`message ${message.sender}`}>\n          <div className=\"message-content\">\n            <div className=\"message-text\">\n              {message.sender === 'bot' && message.tokens ? (\n                <div className=\"token-container\">\n                  {message.tokens.map((token, index) => (\n                    <span\n                      key={index}\n                      className={`token ${token.isGenerated ? 'generated' : 'generating'}`}\n                      style={{ \n                        color: token.color || getConfidenceColor(token.confidence),\n                        backgroundColor: token.confidence > 0 ? \n                          `rgba(${255 * (1 - token.confidence)}, ${255 * token.confidence}, 0, 0.1)` : \n                          'transparent'\n                      }}\n                    >\n                      {token.char}\n                    </span>\n                  ))}\n                </div>\n              ) : (\n                message.text\n              )}\n            </div>\n            <div className=\"message-time\">{formatTime(message.timestamp)}</div>\n          </div>\n        </div>\n      ))}\n      \n      {isGenerating && (\n        <div className=\"generating-indicator\">\n          <div className=\"generating-dots\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          <span>正在生成中...</span>\n        </div>\n      )}\n      \n      {serverError && (\n        <div className=\"error-message\">\n          <div className=\"error-content\">\n            <strong>错误：</strong> {serverError}\n          </div>\n        </div>\n      )}\n      \n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default MessageList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAOd,IAPe,CACnBC,QAAQ,CACRC,YAAY,CACZC,WAAW,CACXC,kBAAkB,CAClBC,UAAU,CACVC,cACF,CAAC,CAAAN,IAAA,CACC,mBACEF,KAAA,QAAKS,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAChCP,QAAQ,CAACQ,GAAG,CAAEC,OAAO,eACpBd,IAAA,QAAsBW,SAAS,CAAE,WAAWG,OAAO,CAACC,MAAM,EAAG,CAAAH,QAAA,cAC3DV,KAAA,QAAKS,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BZ,IAAA,QAAKW,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BE,OAAO,CAACC,MAAM,GAAK,KAAK,EAAID,OAAO,CAACE,MAAM,cACzChB,IAAA,QAAKW,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7BE,OAAO,CAACE,MAAM,CAACH,GAAG,CAAC,CAACI,KAAK,CAAEC,KAAK,gBAC/BlB,IAAA,SAEEW,SAAS,CAAE,SAASM,KAAK,CAACE,WAAW,CAAG,WAAW,CAAG,YAAY,EAAG,CACrEC,KAAK,CAAE,CACLC,KAAK,CAAEJ,KAAK,CAACI,KAAK,EAAIb,kBAAkB,CAACS,KAAK,CAACK,UAAU,CAAC,CAC1DC,eAAe,CAAEN,KAAK,CAACK,UAAU,CAAG,CAAC,CACnC,QAAQ,GAAG,EAAI,CAAC,CAAGL,KAAK,CAACK,UAAU,CAAC,KAAK,GAAG,CAAGL,KAAK,CAACK,UAAU,WAAW,CAC1E,aACJ,CAAE,CAAAV,QAAA,CAEDK,KAAK,CAACO,IAAI,EATNN,KAUD,CACP,CAAC,CACC,CAAC,CAENJ,OAAO,CAACW,IACT,CACE,CAAC,cACNzB,IAAA,QAAKW,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEH,UAAU,CAACK,OAAO,CAACY,SAAS,CAAC,CAAM,CAAC,EAChE,CAAC,EAzBEZ,OAAO,CAACa,EA0Bb,CACN,CAAC,CAEDrB,YAAY,eACXJ,KAAA,QAAKS,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCV,KAAA,QAAKS,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BZ,IAAA,UAAY,CAAC,cACbA,IAAA,UAAY,CAAC,cACbA,IAAA,UAAY,CAAC,EACV,CAAC,cACNA,IAAA,SAAAY,QAAA,CAAM,mCAAQ,CAAM,CAAC,EAClB,CACN,CAEAL,WAAW,eACVP,IAAA,QAAKW,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BV,KAAA,QAAKS,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BZ,IAAA,WAAAY,QAAA,CAAQ,oBAAG,CAAQ,CAAC,IAAC,CAACL,WAAW,EAC9B,CAAC,CACH,CACN,cAEDP,IAAA,QAAK4B,GAAG,CAAElB,cAAe,CAAE,CAAC,EACzB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}