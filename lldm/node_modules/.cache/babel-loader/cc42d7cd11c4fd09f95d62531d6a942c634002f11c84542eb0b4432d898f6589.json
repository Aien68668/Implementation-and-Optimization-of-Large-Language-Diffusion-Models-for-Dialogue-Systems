{"ast":null,"code":"var _jsxFileName = \"/root/LLaDA-main/lldm/src/components/MessageList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Token组件，处理消失动画\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenComponent = ({\n  token,\n  index,\n  confidenceClass,\n  isGenerated,\n  isGenerating,\n  isFinalGenerated\n}) => {\n  _s();\n  const [isDisappearing, setIsDisappearing] = useState(false);\n  const [shouldRender, setShouldRender] = useState(true);\n  const isMask = token.char === '[MASK]';\n  const isEmpty = token.char && token.char.trim() === '';\n  const shouldDisappear = token.isGenerated && isEmpty;\n  useEffect(() => {\n    if (shouldDisappear && !isDisappearing) {\n      // 开始消失动画\n      setIsDisappearing(true);\n\n      // 400ms后（动画完成后）真正移除元素\n      const timer = setTimeout(() => {\n        setShouldRender(false);\n      }, 400);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldDisappear, isDisappearing]);\n  if (!shouldRender) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `token ${confidenceClass} ${token.isGenerated && !isMask ? 'just-generated' : ''} ${!token.isGenerated ? 'generating' : ''} ${isFinalGenerated ? 'final-generated' : ''} ${isDisappearing ? 'token-disappearing' : ''}`,\n    style: {\n      animationDelay: token.isGenerated && !isMask ? `${index * 0.08}s` : '0s'\n    },\n    children: token.char\n  }, token.id || index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenComponent, \"FMVez0bVBAsLQi5wsaHWug0+Utg=\");\n_c = TokenComponent;\nconst MessageList = ({\n  messages,\n  isGenerating,\n  serverError,\n  getConfidenceColor,\n  formatTime,\n  messagesEndRef\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: message.sender === 'bot' && message.tokens ?\n          // 优先显示token可视化，除非消息为空\n          message.text && message.text.trim() === '' ?\n          // 消息为空时，删除token格子，显示空文本\n          message.text :\n          /*#__PURE__*/\n          // 有token数据时，始终显示可视化样式\n          _jsxDEV(\"div\", {\n            className: \"token-container\",\n            children: message.tokens.filter(token => {\n              const isMask = token.char === '[MASK]';\n              const isEmpty = token.char && token.char.trim() === '';\n\n              // 如果token已生成且为空，则过滤掉（立即移除）\n              if (token.isGenerated && isEmpty) {\n                return false;\n              }\n\n              // 保留[MASK]和未生成完毕的token，以及有内容的token\n              return true;\n            }).map((token, index) => {\n              const isMask = token.char === '[MASK]';\n\n              // 根据置信度确定CSS类名\n              let confidenceClass = '';\n              if (isMask) {\n                confidenceClass = 'mask-token';\n              } else {\n                // 根据置信度分配类名\n                if (token.confidence < 0.3) {\n                  confidenceClass = 'confidence-low';\n                } else if (token.confidence < 0.7) {\n                  confidenceClass = 'confidence-medium';\n                } else {\n                  confidenceClass = 'confidence-high';\n                }\n\n                // 如果是之前生成的token（颜色为蓝色）\n                if (token.color === '#6699CC') {\n                  confidenceClass = 'confidence-previous';\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `token ${confidenceClass} ${token.isGenerated && !isMask ? 'just-generated' : ''} ${!token.isGenerated ? 'generating' : ''} ${message.isGenerated ? 'final-generated' : ''}`,\n                style: {\n                  animationDelay: token.isGenerated && !isMask ? `${index * 0.08}s` : '0s'\n                },\n                children: token.char\n              }, token.id || index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this) :\n          // 非bot消息或没有token数据时显示普通文本\n          message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: formatTime(message.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generating-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generating-dots\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u6B63\\u5728\\u751F\\u6210\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u9519\\u8BEF\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), \" \", serverError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MessageList;\nexport default MessageList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TokenComponent\");\n$RefreshReg$(_c2, \"MessageList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TokenComponent","token","index","confidenceClass","isGenerated","isGenerating","isFinalGenerated","_s","isDisappearing","setIsDisappearing","shouldRender","setShouldRender","isMask","char","isEmpty","trim","shouldDisappear","timer","setTimeout","clearTimeout","className","style","animationDelay","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","MessageList","messages","serverError","getConfidenceColor","formatTime","messagesEndRef","map","message","sender","tokens","text","filter","confidence","color","timestamp","ref","_c2","$RefreshReg$"],"sources":["/root/LLaDA-main/lldm/src/components/MessageList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Token组件，处理消失动画\nconst TokenComponent = ({ token, index, confidenceClass, isGenerated, isGenerating, isFinalGenerated }) => {\n  const [isDisappearing, setIsDisappearing] = useState(false);\n  const [shouldRender, setShouldRender] = useState(true);\n  \n  const isMask = token.char === '[MASK]';\n  const isEmpty = token.char && token.char.trim() === '';\n  const shouldDisappear = token.isGenerated && isEmpty;\n  \n  useEffect(() => {\n    if (shouldDisappear && !isDisappearing) {\n      // 开始消失动画\n      setIsDisappearing(true);\n      \n      // 400ms后（动画完成后）真正移除元素\n      const timer = setTimeout(() => {\n        setShouldRender(false);\n      }, 400);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [shouldDisappear, isDisappearing]);\n  \n  if (!shouldRender) {\n    return null;\n  }\n  \n  return (\n    <span\n      key={token.id || index}\n      className={`token ${confidenceClass} ${\n        token.isGenerated && !isMask ? 'just-generated' : ''\n      } ${\n        !token.isGenerated ? 'generating' : ''\n      } ${\n        isFinalGenerated ? 'final-generated' : ''\n      } ${\n        isDisappearing ? 'token-disappearing' : ''\n      }`}\n      style={{ \n        animationDelay: token.isGenerated && !isMask ? `${index * 0.08}s` : '0s'\n      }}\n    >\n      {token.char}\n    </span>\n  );\n};\n\nconst MessageList = ({ \n  messages, \n  isGenerating, \n  serverError, \n  getConfidenceColor, \n  formatTime, \n  messagesEndRef \n}) => {\n  return (\n    <div className=\"messages-container\">\n      {messages.map((message) => (\n        <div key={message.id} className={`message ${message.sender}`}>\n          <div className=\"message-content\">\n            <div className=\"message-text\">\n              {message.sender === 'bot' && message.tokens ? (\n                // 优先显示token可视化，除非消息为空\n                message.text && message.text.trim() === '' ? (\n                  // 消息为空时，删除token格子，显示空文本\n                  message.text\n                ) : (\n                  // 有token数据时，始终显示可视化样式\n                  <div className=\"token-container\">\n                    {message.tokens\n                      .filter((token) => {\n                        const isMask = token.char === '[MASK]';\n                        const isEmpty = token.char && token.char.trim() === '';\n                        \n                        // 如果token已生成且为空，则过滤掉（立即移除）\n                        if (token.isGenerated && isEmpty) {\n                          return false;\n                        }\n                        \n                        // 保留[MASK]和未生成完毕的token，以及有内容的token\n                        return true;\n                      })\n                      .map((token, index) => {\n                        const isMask = token.char === '[MASK]';\n                        \n                        // 根据置信度确定CSS类名\n                        let confidenceClass = '';\n                        if (isMask) {\n                          confidenceClass = 'mask-token';\n                        } else {\n                          // 根据置信度分配类名\n                          if (token.confidence < 0.3) {\n                            confidenceClass = 'confidence-low';\n                          } else if (token.confidence < 0.7) {\n                            confidenceClass = 'confidence-medium';\n                          } else {\n                            confidenceClass = 'confidence-high';\n                          }\n                          \n                          // 如果是之前生成的token（颜色为蓝色）\n                          if (token.color === '#6699CC') {\n                            confidenceClass = 'confidence-previous';\n                          }\n                        }\n                        \n                        return (\n                          <span\n                            key={token.id || index}\n                            className={`token ${confidenceClass} ${\n                              token.isGenerated && !isMask ? 'just-generated' : ''\n                            } ${\n                              !token.isGenerated ? 'generating' : ''\n                            } ${\n                              message.isGenerated ? 'final-generated' : ''\n                            }`}\n                            style={{ \n                              animationDelay: token.isGenerated && !isMask ? `${index * 0.08}s` : '0s'\n                            }}\n                          >\n                            {token.char}\n                          </span>\n                        );\n                      })}\n                  </div>\n                )\n              ) : (\n                // 非bot消息或没有token数据时显示普通文本\n                message.text\n              )}\n            </div>\n            <div className=\"message-time\">{formatTime(message.timestamp)}</div>\n          </div>\n        </div>\n      ))}\n      \n      {isGenerating && (\n        <div className=\"generating-indicator\">\n          <div className=\"generating-dots\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          <span>正在生成中...</span>\n        </div>\n      )}\n      \n      {serverError && (\n        <div className=\"error-message\">\n          <div className=\"error-content\">\n            <strong>错误：</strong> {serverError}\n          </div>\n        </div>\n      )}\n      \n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default MessageList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}