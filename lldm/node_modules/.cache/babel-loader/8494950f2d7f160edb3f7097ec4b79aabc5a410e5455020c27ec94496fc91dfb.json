{"ast":null,"code":"var _jsxFileName = \"/root/LLaDA-main/lldm/src/components/MessageList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n// Token组件，处理消失动画\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenComponent = ({\n  token,\n  index,\n  confidenceClass,\n  isGenerated,\n  isGenerating,\n  isFinalGenerated,\n  onAnimationComplete\n}) => {\n  _s();\n  const [isDisappearing, setIsDisappearing] = useState(false);\n  const [shouldRender, setShouldRender] = useState(true);\n  const isMask = token.char === '[MASK]';\n  const isEmpty = !token.char || token.char.trim() === '';\n  const shouldDisappear = token.isGenerated && isEmpty && !isMask;\n  useEffect(() => {\n    if (shouldDisappear && !isDisappearing) {\n      console.log('Token开始消失动画:', token.char, token);\n      setIsDisappearing(true);\n\n      // 100ms后完全移除元素\n      const timer = setTimeout(() => {\n        setShouldRender(false);\n        if (onAnimationComplete) {\n          onAnimationComplete();\n        }\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldDisappear, isDisappearing, token, onAnimationComplete]);\n  if (!shouldRender) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `token ${confidenceClass} ${token.isGenerated && !isMask ? 'just-generated' : ''} ${!token.isGenerated ? 'generating' : ''} ${isFinalGenerated ? 'final-generated' : ''} ${isDisappearing ? 'token-disappearing' : ''}`,\n    style: {\n      animationDelay: token.isGenerated && !isMask ? `${index * 0.08}s` : '0s'\n    },\n    children: token.char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenComponent, \"FMVez0bVBAsLQi5wsaHWug0+Utg=\");\n_c = TokenComponent;\nconst MessageList = ({\n  messages,\n  isGenerating,\n  serverError,\n  getConfidenceColor,\n  formatTime,\n  messagesEndRef\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: message.sender === 'bot' && message.tokens ?\n          // 优先显示token可视化，除非消息为空\n          message.text && message.text.trim() === '' ?\n          // 消息为空时，删除token格子，显示空文本\n          message.text :\n          /*#__PURE__*/\n          // 有token数据时，始终显示可视化样式\n          _jsxDEV(\"div\", {\n            className: \"token-container\",\n            children: message.tokens.map((token, originalIndex) => {\n              const isMask = token.char === '[MASK]';\n\n              // 根据置信度确定CSS类名\n              let confidenceClass = '';\n              if (isMask) {\n                confidenceClass = 'mask-token';\n              } else {\n                // 根据置信度分配类名\n                if (token.confidence < 0.3) {\n                  confidenceClass = 'confidence-low';\n                } else if (token.confidence < 0.7) {\n                  confidenceClass = 'confidence-medium';\n                } else {\n                  confidenceClass = 'confidence-high';\n                }\n\n                // 如果是之前生成的token（颜色为蓝色）\n                if (token.color === '#6699CC') {\n                  confidenceClass = 'confidence-previous';\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(TokenComponent, {\n                token: token,\n                index: originalIndex,\n                confidenceClass: confidenceClass,\n                isGenerated: token.isGenerated,\n                isGenerating: !token.isGenerated,\n                isFinalGenerated: message.isGenerated\n              }, `${message.id}_${token.id || originalIndex}_${token.char}_${originalIndex}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this) :\n          // 非bot消息或没有token数据时显示普通文本\n          message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: formatTime(message.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generating-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generating-dots\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u6B63\\u5728\\u751F\\u6210\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u9519\\u8BEF\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), \" \", serverError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MessageList;\nexport default MessageList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TokenComponent\");\n$RefreshReg$(_c2, \"MessageList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","TokenComponent","token","index","confidenceClass","isGenerated","isGenerating","isFinalGenerated","onAnimationComplete","_s","isDisappearing","setIsDisappearing","shouldRender","setShouldRender","isMask","char","isEmpty","trim","shouldDisappear","console","log","timer","setTimeout","clearTimeout","className","style","animationDelay","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MessageList","messages","serverError","getConfidenceColor","formatTime","messagesEndRef","map","message","sender","tokens","text","originalIndex","confidence","color","id","timestamp","ref","_c2","$RefreshReg$"],"sources":["/root/LLaDA-main/lldm/src/components/MessageList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n// Token组件，处理消失动画\nconst TokenComponent = ({ token, index, confidenceClass, isGenerated, isGenerating, isFinalGenerated, onAnimationComplete }) => {\n  const [isDisappearing, setIsDisappearing] = useState(false);\n  const [shouldRender, setShouldRender] = useState(true);\n  \n  const isMask = token.char === '[MASK]';\n  const isEmpty = !token.char || token.char.trim() === '';\n  const shouldDisappear = token.isGenerated && isEmpty && !isMask;\n  \n  useEffect(() => {\n    if (shouldDisappear && !isDisappearing) {\n      console.log('Token开始消失动画:', token.char, token);\n      setIsDisappearing(true);\n      \n      // 100ms后完全移除元素\n      const timer = setTimeout(() => {\n        setShouldRender(false);\n        if (onAnimationComplete) {\n          onAnimationComplete();\n        }\n      }, 100);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [shouldDisappear, isDisappearing, token, onAnimationComplete]);\n  \n  if (!shouldRender) {\n    return null;\n  }\n  \n  return (\n    <span\n      className={`token ${confidenceClass} ${\n        token.isGenerated && !isMask ? 'just-generated' : ''\n      } ${\n        !token.isGenerated ? 'generating' : ''\n      } ${\n        isFinalGenerated ? 'final-generated' : ''\n      } ${\n        isDisappearing ? 'token-disappearing' : ''\n      }`}\n      style={{ \n        animationDelay: token.isGenerated && !isMask ? `${index * 0.08}s` : '0s'\n      }}\n    >\n      {token.char}\n    </span>\n  );\n};\n\nconst MessageList = ({ \n  messages, \n  isGenerating, \n  serverError, \n  getConfidenceColor, \n  formatTime, \n  messagesEndRef \n}) => {\n  \n  return (\n    <div className=\"messages-container\">\n      {messages.map((message) => (\n        <div key={message.id} className={`message ${message.sender}`}>\n          <div className=\"message-content\">\n            <div className=\"message-text\">\n              {message.sender === 'bot' && message.tokens ? (\n                // 优先显示token可视化，除非消息为空\n                message.text && message.text.trim() === '' ? (\n                  // 消息为空时，删除token格子，显示空文本\n                  message.text\n                ) : (\n                  // 有token数据时，始终显示可视化样式\n                  <div className=\"token-container\">\n                    {message.tokens.map((token, originalIndex) => {\n                        const isMask = token.char === '[MASK]';\n                        \n                        // 根据置信度确定CSS类名\n                        let confidenceClass = '';\n                        if (isMask) {\n                          confidenceClass = 'mask-token';\n                        } else {\n                          // 根据置信度分配类名\n                          if (token.confidence < 0.3) {\n                            confidenceClass = 'confidence-low';\n                          } else if (token.confidence < 0.7) {\n                            confidenceClass = 'confidence-medium';\n                          } else {\n                            confidenceClass = 'confidence-high';\n                          }\n                          \n                          // 如果是之前生成的token（颜色为蓝色）\n                          if (token.color === '#6699CC') {\n                            confidenceClass = 'confidence-previous';\n                          }\n                        }\n                        \n                        return (\n                          <TokenComponent\n                            key={`${message.id}_${token.id || originalIndex}_${token.char}_${originalIndex}`}\n                            token={token}\n                            index={originalIndex}\n                            confidenceClass={confidenceClass}\n                            isGenerated={token.isGenerated}\n                            isGenerating={!token.isGenerated}\n                            isFinalGenerated={message.isGenerated}\n                          />\n                        );\n                      })}\n                  </div>\n                )\n              ) : (\n                // 非bot消息或没有token数据时显示普通文本\n                message.text\n              )}\n            </div>\n            <div className=\"message-time\">{formatTime(message.timestamp)}</div>\n          </div>\n        </div>\n      ))}\n      \n      {isGenerating && (\n        <div className=\"generating-indicator\">\n          <div className=\"generating-dots\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          <span>正在生成中...</span>\n        </div>\n      )}\n      \n      {serverError && (\n        <div className=\"error-message\">\n          <div className=\"error-content\">\n            <strong>错误：</strong> {serverError}\n          </div>\n        </div>\n      )}\n      \n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default MessageList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}