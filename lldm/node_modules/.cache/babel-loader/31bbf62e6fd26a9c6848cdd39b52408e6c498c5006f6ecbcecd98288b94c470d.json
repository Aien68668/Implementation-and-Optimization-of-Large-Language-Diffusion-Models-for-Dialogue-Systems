{"ast":null,"code":"var _jsxFileName = \"/root/LLaDA-main/lldm/src/components/MessageList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n// Token组件，处理消失动画\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenComponent = ({\n  token,\n  index,\n  confidenceClass,\n  isGenerated,\n  isGenerating,\n  isFinalGenerated,\n  disappearingTokens,\n  onStartDisappearing\n}) => {\n  _s();\n  const [isDisappearing, setIsDisappearing] = useState(false);\n  const disappearTimeoutRef = useRef(null);\n  const isMask = token.char === '[MASK]';\n  const isEmpty = !token.char || token.char.trim() === '';\n  const shouldDisappear = token.isGenerated && isEmpty && !isMask;\n  const tokenKey = `${token.id || index}_${token.char}`;\n\n  // 检查是否应该立即隐藏（已经在消失列表中）\n  const shouldHide = disappearingTokens.has(tokenKey);\n  useEffect(() => {\n    if (shouldDisappear && !isDisappearing && !shouldHide) {\n      console.log('Token开始消失:', token);\n      setIsDisappearing(true);\n\n      // 立即将token标记为消失中\n      onStartDisappearing(tokenKey);\n\n      // 清理之前的定时器\n      if (disappearTimeoutRef.current) {\n        clearTimeout(disappearTimeoutRef.current);\n      }\n    }\n  }, [shouldDisappear, isDisappearing, shouldHide, token, tokenKey, onStartDisappearing]);\n\n  // 如果已经被标记为消失，直接不渲染\n  if (shouldHide) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `token ${confidenceClass} ${token.isGenerated && !isMask ? 'just-generated' : ''} ${!token.isGenerated ? 'generating' : ''} ${isFinalGenerated ? 'final-generated' : ''} ${isDisappearing ? 'token-disappearing' : ''}`,\n    style: {\n      animationDelay: token.isGenerated && !isMask ? `${index * 0.08}s` : '0s'\n    },\n    children: token.char\n  }, tokenKey, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenComponent, \"mpjqIFCY54FHjE9uAP9Z7/kzT+8=\");\n_c = TokenComponent;\nconst MessageList = ({\n  messages,\n  isGenerating,\n  serverError,\n  getConfidenceColor,\n  formatTime,\n  messagesEndRef\n}) => {\n  _s2();\n  // 跟踪每个消息中已消失的token\n  const [disappearedTokens, setDisappearedTokens] = useState(new Map());\n  const handleTokenDisappear = (messageId, tokenId) => {\n    setDisappearedTokens(prev => {\n      const newMap = new Map(prev);\n      const messageDisappeared = newMap.get(messageId) || new Set();\n      messageDisappeared.add(tokenId);\n      newMap.set(messageId, messageDisappeared);\n      return newMap;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: message.sender === 'bot' && message.tokens ?\n          // 优先显示token可视化，除非消息为空\n          message.text && message.text.trim() === '' ?\n          // 消息为空时，删除token格子，显示空文本\n          message.text :\n          /*#__PURE__*/\n          // 有token数据时，始终显示可视化样式\n          _jsxDEV(\"div\", {\n            className: \"token-container\",\n            children: message.tokens.filter((token, index) => {\n              // 过滤掉已消失的token\n              const messageDisappeared = disappearedTokens.get(message.id) || new Set();\n              return !messageDisappeared.has(token.id || index);\n            }).map((token, index) => {\n              const isMask = token.char === '[MASK]';\n\n              // 根据置信度确定CSS类名\n              let confidenceClass = '';\n              if (isMask) {\n                confidenceClass = 'mask-token';\n              } else {\n                // 根据置信度分配类名\n                if (token.confidence < 0.3) {\n                  confidenceClass = 'confidence-low';\n                } else if (token.confidence < 0.7) {\n                  confidenceClass = 'confidence-medium';\n                } else {\n                  confidenceClass = 'confidence-high';\n                }\n\n                // 如果是之前生成的token（颜色为蓝色）\n                if (token.color === '#6699CC') {\n                  confidenceClass = 'confidence-previous';\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(TokenComponent, {\n                token: token,\n                index: index,\n                confidenceClass: confidenceClass,\n                isGenerated: token.isGenerated,\n                isGenerating: !token.isGenerated,\n                isFinalGenerated: message.isGenerated,\n                onDisappear: tokenId => handleTokenDisappear(message.id, tokenId)\n              }, token.id || index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this) :\n          // 非bot消息或没有token数据时显示普通文本\n          message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: formatTime(message.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generating-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generating-dots\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u6B63\\u5728\\u751F\\u6210\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u9519\\u8BEF\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), \" \", serverError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s2(MessageList, \"LyhHT5w5/vAmzg+Or1YSICTAnyk=\");\n_c2 = MessageList;\nexport default MessageList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TokenComponent\");\n$RefreshReg$(_c2, \"MessageList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","TokenComponent","token","index","confidenceClass","isGenerated","isGenerating","isFinalGenerated","disappearingTokens","onStartDisappearing","_s","isDisappearing","setIsDisappearing","disappearTimeoutRef","isMask","char","isEmpty","trim","shouldDisappear","tokenKey","id","shouldHide","has","console","log","current","clearTimeout","className","style","animationDelay","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MessageList","messages","serverError","getConfidenceColor","formatTime","messagesEndRef","_s2","disappearedTokens","setDisappearedTokens","Map","handleTokenDisappear","messageId","tokenId","prev","newMap","messageDisappeared","get","Set","add","set","map","message","sender","tokens","text","filter","confidence","color","onDisappear","timestamp","ref","_c2","$RefreshReg$"],"sources":["/root/LLaDA-main/lldm/src/components/MessageList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n// Token组件，处理消失动画\nconst TokenComponent = ({ token, index, confidenceClass, isGenerated, isGenerating, isFinalGenerated, disappearingTokens, onStartDisappearing }) => {\n  const [isDisappearing, setIsDisappearing] = useState(false);\n  const disappearTimeoutRef = useRef(null);\n  \n  const isMask = token.char === '[MASK]';\n  const isEmpty = !token.char || token.char.trim() === '';\n  const shouldDisappear = token.isGenerated && isEmpty && !isMask;\n  const tokenKey = `${token.id || index}_${token.char}`;\n  \n  // 检查是否应该立即隐藏（已经在消失列表中）\n  const shouldHide = disappearingTokens.has(tokenKey);\n  \n  useEffect(() => {\n    if (shouldDisappear && !isDisappearing && !shouldHide) {\n      console.log('Token开始消失:', token);\n      setIsDisappearing(true);\n      \n      // 立即将token标记为消失中\n      onStartDisappearing(tokenKey);\n      \n      // 清理之前的定时器\n      if (disappearTimeoutRef.current) {\n        clearTimeout(disappearTimeoutRef.current);\n      }\n    }\n  }, [shouldDisappear, isDisappearing, shouldHide, token, tokenKey, onStartDisappearing]);\n  \n  // 如果已经被标记为消失，直接不渲染\n  if (shouldHide) {\n    return null;\n  }\n  \n  return (\n    <span\n      key={tokenKey}\n      className={`token ${confidenceClass} ${\n        token.isGenerated && !isMask ? 'just-generated' : ''\n      } ${\n        !token.isGenerated ? 'generating' : ''\n      } ${\n        isFinalGenerated ? 'final-generated' : ''\n      } ${\n        isDisappearing ? 'token-disappearing' : ''\n      }`}\n      style={{ \n        animationDelay: token.isGenerated && !isMask ? `${index * 0.08}s` : '0s'\n      }}\n    >\n      {token.char}\n    </span>\n  );\n};\n\nconst MessageList = ({ \n  messages, \n  isGenerating, \n  serverError, \n  getConfidenceColor, \n  formatTime, \n  messagesEndRef \n}) => {\n  // 跟踪每个消息中已消失的token\n  const [disappearedTokens, setDisappearedTokens] = useState(new Map());\n  \n  const handleTokenDisappear = (messageId, tokenId) => {\n    setDisappearedTokens(prev => {\n      const newMap = new Map(prev);\n      const messageDisappeared = newMap.get(messageId) || new Set();\n      messageDisappeared.add(tokenId);\n      newMap.set(messageId, messageDisappeared);\n      return newMap;\n    });\n  };\n  \n  return (\n    <div className=\"messages-container\">\n      {messages.map((message) => (\n        <div key={message.id} className={`message ${message.sender}`}>\n          <div className=\"message-content\">\n            <div className=\"message-text\">\n              {message.sender === 'bot' && message.tokens ? (\n                // 优先显示token可视化，除非消息为空\n                message.text && message.text.trim() === '' ? (\n                  // 消息为空时，删除token格子，显示空文本\n                  message.text\n                ) : (\n                  // 有token数据时，始终显示可视化样式\n                  <div className=\"token-container\">\n                    {message.tokens\n                      .filter((token, index) => {\n                        // 过滤掉已消失的token\n                        const messageDisappeared = disappearedTokens.get(message.id) || new Set();\n                        return !messageDisappeared.has(token.id || index);\n                      })\n                      .map((token, index) => {\n                        const isMask = token.char === '[MASK]';\n                        \n                        // 根据置信度确定CSS类名\n                        let confidenceClass = '';\n                        if (isMask) {\n                          confidenceClass = 'mask-token';\n                        } else {\n                          // 根据置信度分配类名\n                          if (token.confidence < 0.3) {\n                            confidenceClass = 'confidence-low';\n                          } else if (token.confidence < 0.7) {\n                            confidenceClass = 'confidence-medium';\n                          } else {\n                            confidenceClass = 'confidence-high';\n                          }\n                          \n                          // 如果是之前生成的token（颜色为蓝色）\n                          if (token.color === '#6699CC') {\n                            confidenceClass = 'confidence-previous';\n                          }\n                        }\n                        \n                        return (\n                          <TokenComponent\n                            key={token.id || index}\n                            token={token}\n                            index={index}\n                            confidenceClass={confidenceClass}\n                            isGenerated={token.isGenerated}\n                            isGenerating={!token.isGenerated}\n                            isFinalGenerated={message.isGenerated}\n                            onDisappear={(tokenId) => handleTokenDisappear(message.id, tokenId)}\n                          />\n                        );\n                      })}\n                  </div>\n                )\n              ) : (\n                // 非bot消息或没有token数据时显示普通文本\n                message.text\n              )}\n            </div>\n            <div className=\"message-time\">{formatTime(message.timestamp)}</div>\n          </div>\n        </div>\n      ))}\n      \n      {isGenerating && (\n        <div className=\"generating-indicator\">\n          <div className=\"generating-dots\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          <span>正在生成中...</span>\n        </div>\n      )}\n      \n      {serverError && (\n        <div className=\"error-message\">\n          <div className=\"error-content\">\n            <strong>错误：</strong> {serverError}\n          </div>\n        </div>\n      )}\n      \n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default MessageList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}