{"ast":null,"code":"import React,{useState}from'react';import ConfidenceIndicator from'./components/ConfidenceIndicator';import MessageList from'./components/MessageList';import SettingsPanel from'./components/SettingsPanel';import InputArea from'./components/InputArea';import{useTextGeneration,useMessages,useSettings}from'./hooks';import{MODEL_CONFIG,UI_CONFIG}from'./constants';import{getConfidenceColor,parseVisualizationState,formatTime}from'./utils/helpers';import'./styles/DiffusionModel.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DiffusionModel=()=>{// 使用自定义hooks\nconst{isGenerating,error:serverError,generateText}=useTextGeneration();const{messages,messagesEndRef,addMessage,updateMessage}=useMessages([{id:1,text:\"欢迎使用LLaDA扩散语言模型可视化系统！\",sender:UI_CONFIG.MESSAGE_TYPES.BOT,timestamp:new Date(),isGenerated:true}]);const{settings,updateSetting}=useSettings(MODEL_CONFIG.DEFAULT_SETTINGS);// 本地状态\nconst[inputValue,setInputValue]=useState('');const[showIndicator,setShowIndicator]=useState(false);const[indicatorPosition,setIndicatorPosition]=useState({x:20,y:100});const[chatHistory,setChatHistory]=useState([]);const[constraints,setConstraints]=useState('');// 生成完整的回复\nconst generateResponse=async userMessage=>{try{// 添加用户消息\nconst userMsg={text:userMessage,sender:UI_CONFIG.MESSAGE_TYPES.USER,isGenerated:true};const userMsgWithId=addMessage(userMsg);// 准备聊天历史\nconst newChatHistory=[...chatHistory,{role:'user',content:userMessage}];// 创建初始的机器人消息\nconst initialTokens=Array(settings.gen_length).fill(null).map((_,index)=>({id:index,char:'[MASK]',confidence:0,color:MODEL_CONFIG.CONFIDENCE_COLORS.MASK,isGenerated:false}));const botMsg={text:'',sender:UI_CONFIG.MESSAGE_TYPES.BOT,tokens:initialTokens,isGenerated:false};const botMsgWithId=addMessage(botMsg);// 调用生成API\nconst requestSettings={...settings,constraints:constraints};const response=await generateText(newChatHistory,requestSettings,// 进度回调\nasync(step,stepIndex,progress)=>{const tokens=parseVisualizationState(step);updateMessage(botMsgWithId.id,{tokens});});// 更新聊天历史\nsetChatHistory([...newChatHistory,{role:'assistant',content:response.response}]);// 设置最终文本\nupdateMessage(botMsgWithId.id,{text:response.response,isGenerated:true});}catch(error){console.error('生成响应时出错:',error);// 错误处理已由hook处理\n}};const handleSend=()=>{if(inputValue.trim()===''||isGenerating)return;const message=inputValue.trim();setInputValue('');generateResponse(message);};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey&&!isGenerating){e.preventDefault();handleSend();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"diffusion-model\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"LLaDA\\u6269\\u6563\\u8BED\\u8A00\\u6A21\\u578B\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u89C2\\u5BDF\\u4ECE [MASK] \\u5230\\u6700\\u7EC8\\u6587\\u672C\\u7684\\u751F\\u6210\\u8FC7\\u7A0B\"}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-indicator-btn\",onClick:()=>setShowIndicator(!showIndicator),title:showIndicator?\"隐藏置信度指示器\":\"显示置信度指示器\",children:showIndicator?\"隐藏指示器\":\"显示指示器\"})]}),/*#__PURE__*/_jsx(ConfidenceIndicator,{isVisible:showIndicator,onClose:()=>setShowIndicator(false),position:indicatorPosition,onPositionChange:setIndicatorPosition}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(MessageList,{messages:messages,isGenerating:isGenerating,serverError:serverError,getConfidenceColor:getConfidenceColor,formatTime:formatTime,messagesEndRef:messagesEndRef}),/*#__PURE__*/_jsx(SettingsPanel,{settings:settings,setSettings:updateSetting,isGenerating:isGenerating}),/*#__PURE__*/_jsx(InputArea,{inputValue:inputValue,setInputValue:setInputValue,constraints:constraints,setConstraints:setConstraints,handleSend:handleSend,handleKeyPress:handleKeyPress,isGenerating:isGenerating})]})]});};export default DiffusionModel;","map":{"version":3,"names":["React","useState","ConfidenceIndicator","MessageList","SettingsPanel","InputArea","useTextGeneration","useMessages","useSettings","MODEL_CONFIG","UI_CONFIG","getConfidenceColor","parseVisualizationState","formatTime","jsx","_jsx","jsxs","_jsxs","DiffusionModel","isGenerating","error","serverError","generateText","messages","messagesEndRef","addMessage","updateMessage","id","text","sender","MESSAGE_TYPES","BOT","timestamp","Date","isGenerated","settings","updateSetting","DEFAULT_SETTINGS","inputValue","setInputValue","showIndicator","setShowIndicator","indicatorPosition","setIndicatorPosition","x","y","chatHistory","setChatHistory","constraints","setConstraints","generateResponse","userMessage","userMsg","USER","userMsgWithId","newChatHistory","role","content","initialTokens","Array","gen_length","fill","map","_","index","char","confidence","color","CONFIDENCE_COLORS","MASK","botMsg","tokens","botMsgWithId","requestSettings","response","step","stepIndex","progress","console","handleSend","trim","message","handleKeyPress","e","key","shiftKey","preventDefault","className","children","onClick","title","isVisible","onClose","position","onPositionChange","setSettings"],"sources":["/root/LLaDA-main/lldm/src/DiffusionModel.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ConfidenceIndicator from './components/ConfidenceIndicator';\r\nimport MessageList from './components/MessageList';\r\nimport SettingsPanel from './components/SettingsPanel';\r\nimport InputArea from './components/InputArea';\r\nimport { useTextGeneration, useMessages, useSettings } from './hooks';\r\nimport { MODEL_CONFIG, UI_CONFIG } from './constants';\r\nimport { getConfidenceColor, parseVisualizationState, formatTime } from './utils/helpers';\r\nimport './styles/DiffusionModel.css';\r\n\r\nconst DiffusionModel = () => {\r\n  // 使用自定义hooks\r\n  const { isGenerating, error: serverError, generateText } = useTextGeneration();\r\n  const { messages, messagesEndRef, addMessage, updateMessage } = useMessages([\r\n    { \r\n      id: 1, \r\n      text: \"欢迎使用LLaDA扩散语言模型可视化系统！\", \r\n      sender: UI_CONFIG.MESSAGE_TYPES.BOT, \r\n      timestamp: new Date(), \r\n      isGenerated: true \r\n    }\r\n  ]);\r\n  const { settings, updateSetting } = useSettings(MODEL_CONFIG.DEFAULT_SETTINGS);\r\n\r\n  // 本地状态\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [showIndicator, setShowIndicator] = useState(false);\r\n  const [indicatorPosition, setIndicatorPosition] = useState({ x: 20, y: 100 });\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [constraints, setConstraints] = useState('');\r\n\r\n  // 生成完整的回复\r\n  const generateResponse = async (userMessage) => {\r\n    try {\r\n      // 添加用户消息\r\n      const userMsg = {\r\n        text: userMessage,\r\n        sender: UI_CONFIG.MESSAGE_TYPES.USER,\r\n        isGenerated: true\r\n      };\r\n      \r\n      const userMsgWithId = addMessage(userMsg);\r\n\r\n      // 准备聊天历史\r\n      const newChatHistory = [\r\n        ...chatHistory,\r\n        { role: 'user', content: userMessage }\r\n      ];\r\n\r\n      // 创建初始的机器人消息\r\n      const initialTokens = Array(settings.gen_length).fill(null).map((_, index) => ({\r\n        id: index,\r\n        char: '[MASK]',\r\n        confidence: 0,\r\n        color: MODEL_CONFIG.CONFIDENCE_COLORS.MASK,\r\n        isGenerated: false\r\n      }));\r\n\r\n      const botMsg = {\r\n        text: '',\r\n        sender: UI_CONFIG.MESSAGE_TYPES.BOT,\r\n        tokens: initialTokens,\r\n        isGenerated: false\r\n      };\r\n\r\n      const botMsgWithId = addMessage(botMsg);\r\n\r\n      // 调用生成API\r\n      const requestSettings = {\r\n        ...settings,\r\n        constraints: constraints\r\n      };\r\n\r\n      const response = await generateText(\r\n        newChatHistory, \r\n        requestSettings,\r\n        // 进度回调\r\n        async (step, stepIndex, progress) => {\r\n          const tokens = parseVisualizationState(step);\r\n          updateMessage(botMsgWithId.id, { tokens });\r\n        }\r\n      );\r\n\r\n      // 更新聊天历史\r\n      setChatHistory([\r\n        ...newChatHistory,\r\n        { role: 'assistant', content: response.response }\r\n      ]);\r\n\r\n      // 设置最终文本\r\n      updateMessage(botMsgWithId.id, { \r\n        text: response.response,\r\n        isGenerated: true \r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('生成响应时出错:', error);\r\n      // 错误处理已由hook处理\r\n    }\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (inputValue.trim() === '' || isGenerating) return;\r\n    \r\n    const message = inputValue.trim();\r\n    setInputValue('');\r\n    generateResponse(message);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey && !isGenerating) {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"diffusion-model\">\r\n      <header className=\"app-header\">\r\n        <h1>LLaDA扩散语言模型可视化系统</h1>\r\n        <p>观察从 [MASK] 到最终文本的生成过程</p>\r\n        <button \r\n          className=\"toggle-indicator-btn\"\r\n          onClick={() => setShowIndicator(!showIndicator)}\r\n          title={showIndicator ? \"隐藏置信度指示器\" : \"显示置信度指示器\"}\r\n        >\r\n          {showIndicator ? \"隐藏指示器\" : \"显示指示器\"}\r\n        </button>\r\n      </header>\r\n      \r\n      <ConfidenceIndicator \r\n        isVisible={showIndicator}\r\n        onClose={() => setShowIndicator(false)}\r\n        position={indicatorPosition}\r\n        onPositionChange={setIndicatorPosition}\r\n      />\r\n      \r\n      <div className=\"chat-container\">\r\n        <MessageList \r\n          messages={messages}\r\n          isGenerating={isGenerating}\r\n          serverError={serverError}\r\n          getConfidenceColor={getConfidenceColor}\r\n          formatTime={formatTime}\r\n          messagesEndRef={messagesEndRef}\r\n        />\r\n        \r\n        <SettingsPanel \r\n          settings={settings}\r\n          setSettings={updateSetting}\r\n          isGenerating={isGenerating}\r\n        />\r\n        \r\n        <InputArea \r\n          inputValue={inputValue}\r\n          setInputValue={setInputValue}\r\n          constraints={constraints}\r\n          setConstraints={setConstraints}\r\n          handleSend={handleSend}\r\n          handleKeyPress={handleKeyPress}\r\n          isGenerating={isGenerating}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiffusionModel;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,mBAAmB,KAAM,kCAAkC,CAClE,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,OAASC,iBAAiB,CAAEC,WAAW,CAAEC,WAAW,KAAQ,SAAS,CACrE,OAASC,YAAY,CAAEC,SAAS,KAAQ,aAAa,CACrD,OAASC,kBAAkB,CAAEC,uBAAuB,CAAEC,UAAU,KAAQ,iBAAiB,CACzF,MAAO,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B;AACA,KAAM,CAAEC,YAAY,CAAEC,KAAK,CAAEC,WAAW,CAAEC,YAAa,CAAC,CAAGhB,iBAAiB,CAAC,CAAC,CAC9E,KAAM,CAAEiB,QAAQ,CAAEC,cAAc,CAAEC,UAAU,CAAEC,aAAc,CAAC,CAAGnB,WAAW,CAAC,CAC1E,CACEoB,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,uBAAuB,CAC7BC,MAAM,CAAEnB,SAAS,CAACoB,aAAa,CAACC,GAAG,CACnCC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CACrBC,WAAW,CAAE,IACf,CAAC,CACF,CAAC,CACF,KAAM,CAAEC,QAAQ,CAAEC,aAAc,CAAC,CAAG5B,WAAW,CAACC,YAAY,CAAC4B,gBAAgB,CAAC,CAE9E;AACA,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGtC,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACuC,aAAa,CAAEC,gBAAgB,CAAC,CAAGxC,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAACyC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG1C,QAAQ,CAAC,CAAE2C,CAAC,CAAE,EAAE,CAAEC,CAAC,CAAE,GAAI,CAAC,CAAC,CAC7E,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAG9C,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAAC+C,WAAW,CAAEC,cAAc,CAAC,CAAGhD,QAAQ,CAAC,EAAE,CAAC,CAElD;AACA,KAAM,CAAAiD,gBAAgB,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC9C,GAAI,CACF;AACA,KAAM,CAAAC,OAAO,CAAG,CACdxB,IAAI,CAAEuB,WAAW,CACjBtB,MAAM,CAAEnB,SAAS,CAACoB,aAAa,CAACuB,IAAI,CACpCnB,WAAW,CAAE,IACf,CAAC,CAED,KAAM,CAAAoB,aAAa,CAAG7B,UAAU,CAAC2B,OAAO,CAAC,CAEzC;AACA,KAAM,CAAAG,cAAc,CAAG,CACrB,GAAGT,WAAW,CACd,CAAEU,IAAI,CAAE,MAAM,CAAEC,OAAO,CAAEN,WAAY,CAAC,CACvC,CAED;AACA,KAAM,CAAAO,aAAa,CAAGC,KAAK,CAACxB,QAAQ,CAACyB,UAAU,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,CAAEC,KAAK,IAAM,CAC7ErC,EAAE,CAAEqC,KAAK,CACTC,IAAI,CAAE,QAAQ,CACdC,UAAU,CAAE,CAAC,CACbC,KAAK,CAAE1D,YAAY,CAAC2D,iBAAiB,CAACC,IAAI,CAC1CnC,WAAW,CAAE,KACf,CAAC,CAAC,CAAC,CAEH,KAAM,CAAAoC,MAAM,CAAG,CACb1C,IAAI,CAAE,EAAE,CACRC,MAAM,CAAEnB,SAAS,CAACoB,aAAa,CAACC,GAAG,CACnCwC,MAAM,CAAEb,aAAa,CACrBxB,WAAW,CAAE,KACf,CAAC,CAED,KAAM,CAAAsC,YAAY,CAAG/C,UAAU,CAAC6C,MAAM,CAAC,CAEvC;AACA,KAAM,CAAAG,eAAe,CAAG,CACtB,GAAGtC,QAAQ,CACXa,WAAW,CAAEA,WACf,CAAC,CAED,KAAM,CAAA0B,QAAQ,CAAG,KAAM,CAAApD,YAAY,CACjCiC,cAAc,CACdkB,eAAe,CACf;AACA,MAAOE,IAAI,CAAEC,SAAS,CAAEC,QAAQ,GAAK,CACnC,KAAM,CAAAN,MAAM,CAAG3D,uBAAuB,CAAC+D,IAAI,CAAC,CAC5CjD,aAAa,CAAC8C,YAAY,CAAC7C,EAAE,CAAE,CAAE4C,MAAO,CAAC,CAAC,CAC5C,CACF,CAAC,CAED;AACAxB,cAAc,CAAC,CACb,GAAGQ,cAAc,CACjB,CAAEC,IAAI,CAAE,WAAW,CAAEC,OAAO,CAAEiB,QAAQ,CAACA,QAAS,CAAC,CAClD,CAAC,CAEF;AACAhD,aAAa,CAAC8C,YAAY,CAAC7C,EAAE,CAAE,CAC7BC,IAAI,CAAE8C,QAAQ,CAACA,QAAQ,CACvBxC,WAAW,CAAE,IACf,CAAC,CAAC,CAEJ,CAAE,MAAOd,KAAK,CAAE,CACd0D,OAAO,CAAC1D,KAAK,CAAC,UAAU,CAAEA,KAAK,CAAC,CAChC;AACF,CACF,CAAC,CAED,KAAM,CAAA2D,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIzC,UAAU,CAAC0C,IAAI,CAAC,CAAC,GAAK,EAAE,EAAI7D,YAAY,CAAE,OAE9C,KAAM,CAAA8D,OAAO,CAAG3C,UAAU,CAAC0C,IAAI,CAAC,CAAC,CACjCzC,aAAa,CAAC,EAAE,CAAC,CACjBW,gBAAgB,CAAC+B,OAAO,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAC,cAAc,CAAIC,CAAC,EAAK,CAC5B,GAAIA,CAAC,CAACC,GAAG,GAAK,OAAO,EAAI,CAACD,CAAC,CAACE,QAAQ,EAAI,CAAClE,YAAY,CAAE,CACrDgE,CAAC,CAACG,cAAc,CAAC,CAAC,CAClBP,UAAU,CAAC,CAAC,CACd,CACF,CAAC,CAED,mBACE9D,KAAA,QAAKsE,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BvE,KAAA,WAAQsE,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5BzE,IAAA,OAAAyE,QAAA,CAAI,yEAAgB,CAAI,CAAC,cACzBzE,IAAA,MAAAyE,QAAA,CAAG,wFAAqB,CAAG,CAAC,cAC5BzE,IAAA,WACEwE,SAAS,CAAC,sBAAsB,CAChCE,OAAO,CAAEA,CAAA,GAAMhD,gBAAgB,CAAC,CAACD,aAAa,CAAE,CAChDkD,KAAK,CAAElD,aAAa,CAAG,UAAU,CAAG,UAAW,CAAAgD,QAAA,CAE9ChD,aAAa,CAAG,OAAO,CAAG,OAAO,CAC5B,CAAC,EACH,CAAC,cAETzB,IAAA,CAACb,mBAAmB,EAClByF,SAAS,CAAEnD,aAAc,CACzBoD,OAAO,CAAEA,CAAA,GAAMnD,gBAAgB,CAAC,KAAK,CAAE,CACvCoD,QAAQ,CAAEnD,iBAAkB,CAC5BoD,gBAAgB,CAAEnD,oBAAqB,CACxC,CAAC,cAEF1B,KAAA,QAAKsE,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BzE,IAAA,CAACZ,WAAW,EACVoB,QAAQ,CAAEA,QAAS,CACnBJ,YAAY,CAAEA,YAAa,CAC3BE,WAAW,CAAEA,WAAY,CACzBV,kBAAkB,CAAEA,kBAAmB,CACvCE,UAAU,CAAEA,UAAW,CACvBW,cAAc,CAAEA,cAAe,CAChC,CAAC,cAEFT,IAAA,CAACX,aAAa,EACZ+B,QAAQ,CAAEA,QAAS,CACnB4D,WAAW,CAAE3D,aAAc,CAC3BjB,YAAY,CAAEA,YAAa,CAC5B,CAAC,cAEFJ,IAAA,CAACV,SAAS,EACRiC,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BS,WAAW,CAAEA,WAAY,CACzBC,cAAc,CAAEA,cAAe,CAC/B8B,UAAU,CAAEA,UAAW,CACvBG,cAAc,CAAEA,cAAe,CAC/B/D,YAAY,CAAEA,YAAa,CAC5B,CAAC,EACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}