{"ast":null,"code":"import axios from'axios';// 后端API基础URL\nconst API_BASE_URL='http://localhost:5000';// 创建axios实例\nconst api=axios.create({baseURL:API_BASE_URL,timeout:60000,// 60秒超时\nheaders:{'Content-Type':'application/json'}});// 请求拦截器\napi.interceptors.request.use(config=>{console.log('发送请求:',config);return config;},error=>{console.error('请求错误:',error);return Promise.reject(error);});// 响应拦截器\napi.interceptors.response.use(response=>{console.log('收到响应:',response);return response;},error=>{console.error('响应错误:',error);return Promise.reject(error);});// 生成文本的API调用\nexport const generateText=async function(messages){let settings=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await api.post('/generate',{messages,settings});return response.data;}catch(error){console.error('生成文本时出错:',error);throw error;}};// 检查服务器状态\nexport const checkServerStatus=async()=>{try{const response=await api.get('/health');return response.data;}catch(error){console.error('服务器状态检查失败:',error);throw error;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","error","Promise","reject","response","generateText","messages","settings","arguments","length","undefined","post","data","checkServerStatus","get"],"sources":["/root/LLaDA-main/lldm/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\n\n// 后端API基础URL\nconst API_BASE_URL = 'http://localhost:5000';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 60000, // 60秒超时\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 请求拦截器\napi.interceptors.request.use(\n  (config) => {\n    console.log('发送请求:', config);\n    return config;\n  },\n  (error) => {\n    console.error('请求错误:', error);\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\napi.interceptors.response.use(\n  (response) => {\n    console.log('收到响应:', response);\n    return response;\n  },\n  (error) => {\n    console.error('响应错误:', error);\n    return Promise.reject(error);\n  }\n);\n\n// 生成文本的API调用\nexport const generateText = async (messages, settings = {}) => {\n  try {\n    const response = await api.post('/generate', {\n      messages,\n      settings\n    });\n    return response.data;\n  } catch (error) {\n    console.error('生成文本时出错:', error);\n    throw error;\n  }\n};\n\n// 检查服务器状态\nexport const checkServerStatus = async () => {\n  try {\n    const response = await api.get('/health');\n    return response.data;\n  } catch (error) {\n    console.error('服务器状态检查失败:', error);\n    throw error;\n  }\n};\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,YAAY,CAAG,uBAAuB,CAE5C;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,KAAK,CAAE;AAChBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACVC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAEF,MAAM,CAAC,CAC5B,MAAO,CAAAA,MAAM,CACf,CAAC,CACAG,KAAK,EAAK,CACTF,OAAO,CAACE,KAAK,CAAC,OAAO,CAAEA,KAAK,CAAC,CAC7B,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAX,GAAG,CAACK,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,EAAK,CACZL,OAAO,CAACC,GAAG,CAAC,OAAO,CAAEI,QAAQ,CAAC,CAC9B,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACAH,KAAK,EAAK,CACTF,OAAO,CAACE,KAAK,CAAC,OAAO,CAAEA,KAAK,CAAC,CAC7B,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,YAAY,CAAG,cAAAA,CAAOC,QAAQ,CAAoB,IAAlB,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACxD,GAAI,CACF,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACqB,IAAI,CAAC,WAAW,CAAE,CAC3CL,QAAQ,CACRC,QACF,CAAC,CAAC,CACF,MAAO,CAAAH,QAAQ,CAACQ,IAAI,CACtB,CAAE,MAAOX,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,UAAU,CAAEA,KAAK,CAAC,CAChC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAY,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CACF,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACwB,GAAG,CAAC,SAAS,CAAC,CACzC,MAAO,CAAAV,QAAQ,CAACQ,IAAI,CACtB,CAAE,MAAOX,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAClC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}