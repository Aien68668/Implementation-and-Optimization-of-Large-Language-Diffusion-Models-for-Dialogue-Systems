{"ast":null,"code":"var _jsxFileName = \"/root/LLaDA-main/lldm/src/components/InputArea.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputArea = ({\n  inputValue,\n  setInputValue,\n  constraints,\n  setConstraints,\n  handleSend,\n  handleKeyPress,\n  isGenerating\n}) => {\n  _s();\n  const textareaRef = useRef(null);\n\n  // 自动调整文本框高度\n  const adjustTextareaHeight = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      // 重置高度以计算实际需要的高度\n      textarea.style.height = 'auto';\n\n      // 计算内容高度\n      const scrollHeight = textarea.scrollHeight;\n\n      // 获取计算后的样式\n      const style = window.getComputedStyle(textarea);\n      const paddingTop = parseInt(style.paddingTop, 10);\n      const paddingBottom = parseInt(style.paddingBottom, 10);\n      const lineHeight = parseInt(style.lineHeight, 10) || 21; // 默认行高\n\n      // 计算最小和最大高度\n      const minHeight = 40; // 最小高度\n      const maxLines = 6;\n      const maxHeight = lineHeight * maxLines + paddingTop + paddingBottom;\n\n      // 设置高度，但限制在最小和最大高度之间\n      const newHeight = Math.max(minHeight, Math.min(scrollHeight, maxHeight));\n      textarea.style.height = `${newHeight}px`;\n\n      // 如果内容超过最大高度，启用滚动\n      if (scrollHeight > maxHeight) {\n        textarea.style.overflowY = 'auto';\n      } else {\n        textarea.style.overflowY = 'hidden';\n      }\n    }\n  };\n\n  // 当输入值改变时调整高度\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [inputValue]);\n\n  // 处理输入变化\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"constraints-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: constraints,\n        onChange: e => setConstraints(e.target.value),\n        placeholder: \"\\u4F4D\\u7F6E\\u7EA6\\u675F (\\u4F8B\\u5982: 0:Once, 5:upon, 10:time)\",\n        className: \"constraints-input\",\n        disabled: isGenerating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textareaRef,\n        value: inputValue,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress,\n        placeholder: \"\\u8F93\\u5165\\u60A8\\u7684\\u6D88\\u606F\\u6765\\u89E6\\u53D1LLaDA\\u6269\\u6563\\u751F\\u6210\\u8FC7\\u7A0B...\",\n        className: \"input-field auto-resize\",\n        rows: \"1\",\n        disabled: isGenerating,\n        style: {\n          resize: 'none',\n          overflow: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"send-button\",\n        disabled: inputValue.trim() === '' || isGenerating,\n        children: isGenerating ? '生成中...' : '发送'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(InputArea, \"gSWexK8idHTRtbhGpJOt6TRUPko=\");\n_c = InputArea;\nexport default InputArea;\nvar _c;\n$RefreshReg$(_c, \"InputArea\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","InputArea","inputValue","setInputValue","constraints","setConstraints","handleSend","handleKeyPress","isGenerating","_s","textareaRef","adjustTextareaHeight","textarea","current","style","height","scrollHeight","window","getComputedStyle","paddingTop","parseInt","paddingBottom","lineHeight","minHeight","maxLines","maxHeight","newHeight","Math","max","min","overflowY","handleInputChange","e","target","value","children","className","type","onChange","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","ref","onKeyPress","rows","resize","overflow","onClick","trim","_c","$RefreshReg$"],"sources":["/root/LLaDA-main/lldm/src/components/InputArea.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst InputArea = ({ \n  inputValue, \n  setInputValue, \n  constraints, \n  setConstraints, \n  handleSend, \n  handleKeyPress, \n  isGenerating \n}) => {\n  const textareaRef = useRef(null);\n\n  // 自动调整文本框高度\n  const adjustTextareaHeight = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      // 重置高度以计算实际需要的高度\n      textarea.style.height = 'auto';\n      \n      // 计算内容高度\n      const scrollHeight = textarea.scrollHeight;\n      \n      // 获取计算后的样式\n      const style = window.getComputedStyle(textarea);\n      const paddingTop = parseInt(style.paddingTop, 10);\n      const paddingBottom = parseInt(style.paddingBottom, 10);\n      const lineHeight = parseInt(style.lineHeight, 10) || 21; // 默认行高\n      \n      // 计算最小和最大高度\n      const minHeight = 40; // 最小高度\n      const maxLines = 6;\n      const maxHeight = (lineHeight * maxLines) + paddingTop + paddingBottom;\n      \n      // 设置高度，但限制在最小和最大高度之间\n      const newHeight = Math.max(minHeight, Math.min(scrollHeight, maxHeight));\n      textarea.style.height = `${newHeight}px`;\n      \n      // 如果内容超过最大高度，启用滚动\n      if (scrollHeight > maxHeight) {\n        textarea.style.overflowY = 'auto';\n      } else {\n        textarea.style.overflowY = 'hidden';\n      }\n    }\n  };\n\n  // 当输入值改变时调整高度\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [inputValue]);\n\n  // 处理输入变化\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <>\n      {/* 约束输入 */}\n      <div className=\"constraints-container\">\n        <input\n          type=\"text\"\n          value={constraints}\n          onChange={(e) => setConstraints(e.target.value)}\n          placeholder=\"位置约束 (例如: 0:Once, 5:upon, 10:time)\"\n          className=\"constraints-input\"\n          disabled={isGenerating}\n        />\n      </div>\n      \n      {/* 消息输入 */}\n      <div className=\"input-container\">\n        <textarea\n          ref={textareaRef}\n          value={inputValue}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n          placeholder=\"输入您的消息来触发LLaDA扩散生成过程...\"\n          className=\"input-field auto-resize\"\n          rows=\"1\"\n          disabled={isGenerating}\n          style={{\n            resize: 'none',\n            overflow: 'auto'\n          }}\n        />\n        <button \n          onClick={handleSend}\n          className=\"send-button\"\n          disabled={inputValue.trim() === '' || isGenerating}\n        >\n          {isGenerating ? '生成中...' : '发送'}\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default InputArea;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}