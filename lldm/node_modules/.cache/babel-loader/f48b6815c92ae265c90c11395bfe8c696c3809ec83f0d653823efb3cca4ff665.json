{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{generateText}from'./services/apiService';import ConfidenceIndicator from'./components/ConfidenceIndicator';import MessageList from'./components/MessageList';import SettingsPanel from'./components/SettingsPanel';import InputArea from'./components/InputArea';import{getConfidenceColor,parseVisualizationState,formatTime,generateInitialTokens}from'./utils/helpers';import'./styles/DiffusionModel.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DiffusionModel=()=>{const[messages,setMessages]=useState([{id:1,text:\"欢迎使用LLaDA扩散语言模型可视化系统！\",sender:'bot',timestamp:new Date(),isGenerated:true}]);const[inputValue,setInputValue]=useState('');const[isGenerating,setIsGenerating]=useState(false);const[showIndicator,setShowIndicator]=useState(false);const[indicatorPosition,setIndicatorPosition]=useState({x:20,y:100});const[chatHistory,setChatHistory]=useState([]);const[constraints,setConstraints]=useState('');const[serverError,setServerError]=useState(null);const messagesEndRef=useRef(null);// 生成设置\nconst[settings,setSettings]=useState({gen_length:64,steps:32,temperature:0.0,cfg_scale:0.0,block_length:32,remasking:'low_confidence',constraints:''});const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{scrollToBottom();},[messages]);// 生成完整的回复\nconst generateResponse=async userMessage=>{setIsGenerating(true);setServerError(null);try{// 添加用户消息\nconst userMsg={id:Date.now(),text:userMessage,sender:'user',timestamp:new Date(),isGenerated:true};setMessages(prev=>[...prev,userMsg]);// 准备聊天历史\nconst newChatHistory=[...chatHistory,{role:'user',content:userMessage}];// 创建初始的掩码消息\nconst initialTokens=Array(settings.gen_length).fill(null).map((_,index)=>({id:index,char:'[MASK]',confidence:0,color:'#444444',isGenerated:false}));const botMessage={id:Date.now()+1,text:'',sender:'bot',timestamp:new Date(),tokens:initialTokens,isGenerated:false};setMessages(prev=>[...prev,botMessage]);// 调用后端API生成响应\nconst requestSettings={...settings,constraints:constraints};const response=await generateText(newChatHistory,requestSettings);if(response.error){throw new Error(response.error);}// 更新聊天历史\nsetChatHistory([...newChatHistory,{role:'assistant',content:response.response}]);// 逐步显示可视化过程\nconst visualizationSteps=response.visualization||[];for(let stepIndex=0;stepIndex<visualizationSteps.length;stepIndex++){const step=visualizationSteps[stepIndex];const tokens=parseVisualizationState(step);// 更新消息中的tokens\nsetMessages(prev=>prev.map(msg=>{if(msg.id===botMessage.id){return{...msg,tokens};}return msg;}));// 如果不是最后一步，等待一段时间再显示下一步\nif(stepIndex<visualizationSteps.length-1){await new Promise(resolve=>setTimeout(resolve,200));}}// 生成完成，设置最终文本\nsetMessages(prev=>prev.map(msg=>{if(msg.id===botMessage.id){return{...msg,text:response.response,isGenerated:true};}return msg;}));}catch(error){console.error('生成响应时出错:',error);setServerError(error.message||'服务器连接失败');// 移除未完成的bot消息\nsetMessages(prev=>prev.filter(msg=>msg.id!==Date.now()+1));}finally{setIsGenerating(false);}};const handleSend=()=>{if(inputValue.trim()===''||isGenerating)return;const message=inputValue.trim();setInputValue('');generateResponse(message);};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey&&!isGenerating){e.preventDefault();handleSend();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"diffusion-model\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"LLaDA\\u6269\\u6563\\u8BED\\u8A00\\u6A21\\u578B\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u89C2\\u5BDF\\u4ECE [MASK] \\u5230\\u6700\\u7EC8\\u6587\\u672C\\u7684\\u751F\\u6210\\u8FC7\\u7A0B\"}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-indicator-btn\",onClick:()=>setShowIndicator(!showIndicator),title:showIndicator?\"隐藏置信度指示器\":\"显示置信度指示器\",children:showIndicator?\"隐藏指示器\":\"显示指示器\"})]}),/*#__PURE__*/_jsx(ConfidenceIndicator,{isVisible:showIndicator,onClose:()=>setShowIndicator(false),position:indicatorPosition,onPositionChange:setIndicatorPosition}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(MessageList,{messages:messages,isGenerating:isGenerating,serverError:serverError,getConfidenceColor:getConfidenceColor,formatTime:formatTime,messagesEndRef:messagesEndRef}),/*#__PURE__*/_jsx(SettingsPanel,{settings:settings,setSettings:setSettings,isGenerating:isGenerating}),/*#__PURE__*/_jsx(InputArea,{inputValue:inputValue,setInputValue:setInputValue,constraints:constraints,setConstraints:setConstraints,handleSend:handleSend,handleKeyPress:handleKeyPress,isGenerating:isGenerating})]})]});};export default DiffusionModel;","map":{"version":3,"names":["React","useState","useEffect","useRef","generateText","ConfidenceIndicator","MessageList","SettingsPanel","InputArea","getConfidenceColor","parseVisualizationState","formatTime","generateInitialTokens","jsx","_jsx","jsxs","_jsxs","DiffusionModel","messages","setMessages","id","text","sender","timestamp","Date","isGenerated","inputValue","setInputValue","isGenerating","setIsGenerating","showIndicator","setShowIndicator","indicatorPosition","setIndicatorPosition","x","y","chatHistory","setChatHistory","constraints","setConstraints","serverError","setServerError","messagesEndRef","settings","setSettings","gen_length","steps","temperature","cfg_scale","block_length","remasking","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","generateResponse","userMessage","userMsg","now","prev","newChatHistory","role","content","initialTokens","Array","fill","map","_","index","char","confidence","color","botMessage","tokens","requestSettings","response","error","Error","visualizationSteps","visualization","stepIndex","length","step","msg","Promise","resolve","setTimeout","console","message","filter","handleSend","trim","handleKeyPress","e","key","shiftKey","preventDefault","className","children","onClick","title","isVisible","onClose","position","onPositionChange"],"sources":["/root/LLaDA-main/lldm/src/DiffusionModel.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { generateText } from './services/apiService';\r\nimport ConfidenceIndicator from './components/ConfidenceIndicator';\r\nimport MessageList from './components/MessageList';\r\nimport SettingsPanel from './components/SettingsPanel';\r\nimport InputArea from './components/InputArea';\r\nimport { getConfidenceColor, parseVisualizationState, formatTime, generateInitialTokens } from './utils/helpers';\r\nimport './styles/DiffusionModel.css';\r\n\r\nconst DiffusionModel = () => {\r\n  const [messages, setMessages] = useState([\r\n    { id: 1, text: \"欢迎使用LLaDA扩散语言模型可视化系统！\", sender: 'bot', timestamp: new Date(), isGenerated: true }\r\n  ]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [showIndicator, setShowIndicator] = useState(false);\r\n  const [indicatorPosition, setIndicatorPosition] = useState({ x: 20, y: 100 });\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [constraints, setConstraints] = useState('');\r\n  const [serverError, setServerError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // 生成设置\r\n  const [settings, setSettings] = useState({\r\n    gen_length: 64,\r\n    steps: 32,\r\n    temperature: 0.0,\r\n    cfg_scale: 0.0,\r\n    block_length: 32,\r\n    remasking: 'low_confidence',\r\n    constraints: ''\r\n  });\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // 生成完整的回复\r\n  const generateResponse = async (userMessage) => {\r\n    setIsGenerating(true);\r\n    setServerError(null);\r\n    \r\n    try {\r\n      // 添加用户消息\r\n      const userMsg = {\r\n        id: Date.now(),\r\n        text: userMessage,\r\n        sender: 'user',\r\n        timestamp: new Date(),\r\n        isGenerated: true\r\n      };\r\n      \r\n      setMessages(prev => [...prev, userMsg]);\r\n\r\n      // 准备聊天历史\r\n      const newChatHistory = [\r\n        ...chatHistory,\r\n        { role: 'user', content: userMessage }\r\n      ];\r\n\r\n      // 创建初始的掩码消息\r\n      const initialTokens = Array(settings.gen_length).fill(null).map((_, index) => ({\r\n        id: index,\r\n        char: '[MASK]',\r\n        confidence: 0,\r\n        color: '#444444',\r\n        isGenerated: false\r\n      }));\r\n\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        text: '',\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n        tokens: initialTokens,\r\n        isGenerated: false\r\n      };\r\n\r\n      setMessages(prev => [...prev, botMessage]);\r\n\r\n      // 调用后端API生成响应\r\n      const requestSettings = {\r\n        ...settings,\r\n        constraints: constraints\r\n      };\r\n\r\n      const response = await generateText(newChatHistory, requestSettings);\r\n      \r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      // 更新聊天历史\r\n      setChatHistory([\r\n        ...newChatHistory,\r\n        { role: 'assistant', content: response.response }\r\n      ]);\r\n\r\n      // 逐步显示可视化过程\r\n      const visualizationSteps = response.visualization || [];\r\n      \r\n      for (let stepIndex = 0; stepIndex < visualizationSteps.length; stepIndex++) {\r\n        const step = visualizationSteps[stepIndex];\r\n        const tokens = parseVisualizationState(step);\r\n        \r\n        // 更新消息中的tokens\r\n        setMessages(prev => prev.map(msg => {\r\n          if (msg.id === botMessage.id) {\r\n            return { ...msg, tokens };\r\n          }\r\n          return msg;\r\n        }));\r\n        \r\n        // 如果不是最后一步，等待一段时间再显示下一步\r\n        if (stepIndex < visualizationSteps.length - 1) {\r\n          await new Promise(resolve => setTimeout(resolve, 200));\r\n        }\r\n      }\r\n\r\n      // 生成完成，设置最终文本\r\n      setMessages(prev => prev.map(msg => {\r\n        if (msg.id === botMessage.id) {\r\n          return { \r\n            ...msg, \r\n            text: response.response,\r\n            isGenerated: true \r\n          };\r\n        }\r\n        return msg;\r\n      }));\r\n\r\n    } catch (error) {\r\n      console.error('生成响应时出错:', error);\r\n      setServerError(error.message || '服务器连接失败');\r\n      \r\n      // 移除未完成的bot消息\r\n      setMessages(prev => prev.filter(msg => msg.id !== Date.now() + 1));\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (inputValue.trim() === '' || isGenerating) return;\r\n    \r\n    const message = inputValue.trim();\r\n    setInputValue('');\r\n    generateResponse(message);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey && !isGenerating) {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"diffusion-model\">\r\n      <header className=\"app-header\">\r\n        <h1>LLaDA扩散语言模型可视化系统</h1>\r\n        <p>观察从 [MASK] 到最终文本的生成过程</p>\r\n        <button \r\n          className=\"toggle-indicator-btn\"\r\n          onClick={() => setShowIndicator(!showIndicator)}\r\n          title={showIndicator ? \"隐藏置信度指示器\" : \"显示置信度指示器\"}\r\n        >\r\n          {showIndicator ? \"隐藏指示器\" : \"显示指示器\"}\r\n        </button>\r\n      </header>\r\n      \r\n      <ConfidenceIndicator \r\n        isVisible={showIndicator}\r\n        onClose={() => setShowIndicator(false)}\r\n        position={indicatorPosition}\r\n        onPositionChange={setIndicatorPosition}\r\n      />\r\n      \r\n      <div className=\"chat-container\">\r\n        <MessageList \r\n          messages={messages}\r\n          isGenerating={isGenerating}\r\n          serverError={serverError}\r\n          getConfidenceColor={getConfidenceColor}\r\n          formatTime={formatTime}\r\n          messagesEndRef={messagesEndRef}\r\n        />\r\n        \r\n        <SettingsPanel \r\n          settings={settings}\r\n          setSettings={setSettings}\r\n          isGenerating={isGenerating}\r\n        />\r\n        \r\n        <InputArea \r\n          inputValue={inputValue}\r\n          setInputValue={setInputValue}\r\n          constraints={constraints}\r\n          setConstraints={setConstraints}\r\n          handleSend={handleSend}\r\n          handleKeyPress={handleKeyPress}\r\n          isGenerating={isGenerating}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiffusionModel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}